---
source: diesel_cli/tests/print_schema.rs
description: "Test: print_schema_with_enum_set_types"
---
// @generated automatically by Diesel CLI.

/// A module containing custom SQL type definitions
///
/// (Automatically generated by Diesel.)
pub mod sql_types {
    /// The `set` SQL type for the
    /// [`users1::enabled_features`](super::users1::enabled_features)) column
    ///
    /// (Automatically generated by Diesel.)
    #[derive(diesel::query_builder::QueryId, diesel::sql_types::SqlType)]
    #[diesel(mysql_type(name = "Set"))]
    pub struct Users1EnabledFeaturesSet;

    /// The `enum` SQL type for the
    /// [`users1::user_state`](super::users1::user_state)) column
    ///
    /// (Automatically generated by Diesel.)
    #[derive(diesel::query_builder::QueryId, diesel::sql_types::SqlType)]
    #[diesel(mysql_type(name = "Enum"))]
    pub struct Users1UserStateEnum;
}

diesel::table! {
    use diesel::sql_types::*;
    use super::sql_types::Users1UserStateEnum;
    use super::sql_types::Users1EnabledFeaturesSet;

    /// Representation of the `users1` table.
    ///
    /// (Automatically generated by Diesel.)
    users1 (id) {
        /// The `id` column of the `users1` table.
        ///
        /// Its SQL type is `Integer`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Integer,
        /// The `user_state` column of the `users1` table.
        ///
        /// Its SQL type is `Users1UserStateEnum`.
        ///
        /// (Automatically generated by Diesel.)
        #[max_length = 8]
        user_state -> Users1UserStateEnum,
        /// The `enabled_features` column of the `users1` table.
        ///
        /// Its SQL type is `Users1EnabledFeaturesSet`.
        ///
        /// (Automatically generated by Diesel.)
        #[max_length = 19]
        enabled_features -> Users1EnabledFeaturesSet,
    }
}

