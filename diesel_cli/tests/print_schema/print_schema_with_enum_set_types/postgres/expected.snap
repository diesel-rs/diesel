---
source: diesel_cli/tests/print_schema.rs
description: "Test: print_schema_with_enum_set_types"
---
// @generated automatically by Diesel CLI.

/// A module containing custom SQL type definitions
///
/// (Automatically generated by Diesel.)
pub mod sql_types {
    /// The `some_enum` SQL type
    ///
    /// (Automatically generated by Diesel.)
    #[derive(diesel::query_builder::QueryId, Clone, diesel::sql_types::SqlType)]
    #[diesel(postgres_type(name = "some_enum"))]
    pub struct SomeEnum;

    /// The `some_enum_2` SQL type
    ///
    /// (Automatically generated by Diesel.)
    #[derive(diesel::query_builder::QueryId, Clone, diesel::sql_types::SqlType)]
    #[diesel(postgres_type(name = "some_enum_2"))]
    pub struct SomeEnum2;
}

diesel::table! {
    #[allow(clippy::pedantic)]
    use diesel::sql_types::*;
    use super::sql_types::SomeEnum;
    use super::sql_types::SomeEnum2;

    /// Representation of the `resource` table.
    ///
    /// (Automatically generated by Diesel.)
    resource (resource_id) {
        /// The `resource_id` column of the `resource` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        resource_id -> Int4,
        /// The `some_field` column of the `resource` table.
        ///
        /// Its SQL type is `SomeEnum`.
        ///
        /// (Automatically generated by Diesel.)
        some_field -> SomeEnum,
        /// The `some_field_2` column of the `resource` table.
        ///
        /// Its SQL type is `SomeEnum2`.
        ///
        /// (Automatically generated by Diesel.)
        some_field_2 -> SomeEnum2,
    }
}
