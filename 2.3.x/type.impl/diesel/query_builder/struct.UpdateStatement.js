(function() {
    var type_impls = Object.fromEntries([["diesel",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsQuery-for-UpdateStatement%3CT,+U,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#223-237\">Source</a><a href=\"#impl-AsQuery-for-UpdateStatement%3CT,+U,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, V&gt; <a class=\"trait\" href=\"diesel/query_builder/trait.AsQuery.html\" title=\"trait diesel::query_builder::AsQuery\">AsQuery</a> for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, NoReturningClause&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"diesel/query_source/trait.Table.html\" title=\"trait diesel::query_source::Table\">Table</a>,\n    <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, <a class=\"struct\" href=\"diesel/query_builder/struct.ReturningClause.html\" title=\"struct diesel::query_builder::ReturningClause\">ReturningClause</a>&lt;T::<a class=\"associatedtype\" href=\"diesel/query_source/trait.Table.html#associatedtype.AllColumns\" title=\"type diesel::query_source::Table::AllColumns\">AllColumns</a>&gt;&gt;: <a class=\"trait\" href=\"diesel/query_builder/trait.Query.html\" title=\"trait diesel::query_builder::Query\">Query</a>,\n    T::<a class=\"associatedtype\" href=\"diesel/query_source/trait.Table.html#associatedtype.AllColumns\" title=\"type diesel::query_source::Table::AllColumns\">AllColumns</a>: <a class=\"trait\" href=\"diesel/expression/trait.ValidGrouping.html\" title=\"trait diesel::expression::ValidGrouping\">ValidGrouping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,\n    &lt;T::<a class=\"associatedtype\" href=\"diesel/query_source/trait.Table.html#associatedtype.AllColumns\" title=\"type diesel::query_source::Table::AllColumns\">AllColumns</a> as <a class=\"trait\" href=\"diesel/expression/trait.ValidGrouping.html\" title=\"trait diesel::expression::ValidGrouping\">ValidGrouping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt;::<a class=\"associatedtype\" href=\"diesel/expression/trait.ValidGrouping.html#associatedtype.IsAggregate\" title=\"type diesel::expression::ValidGrouping::IsAggregate\">IsAggregate</a>: <a class=\"trait\" href=\"diesel/expression/trait.MixedAggregates.html\" title=\"trait diesel::expression::MixedAggregates\">MixedAggregates</a>&lt;<a class=\"struct\" href=\"diesel/expression/is_aggregate/struct.No.html\" title=\"struct diesel::expression::is_aggregate::No\">No</a>, Output = <a class=\"struct\" href=\"diesel/expression/is_aggregate/struct.No.html\" title=\"struct diesel::expression::is_aggregate::No\">No</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SqlType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#231\">Source</a><a href=\"#associatedtype.SqlType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"diesel/query_builder/trait.AsQuery.html#associatedtype.SqlType\" class=\"associatedtype\">SqlType</a> = &lt;&lt;<a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V&gt; as <a class=\"trait\" href=\"diesel/query_builder/trait.AsQuery.html\" title=\"trait diesel::query_builder::AsQuery\">AsQuery</a>&gt;::<a class=\"associatedtype\" href=\"diesel/query_builder/trait.AsQuery.html#associatedtype.Query\" title=\"type diesel::query_builder::AsQuery::Query\">Query</a> as <a class=\"trait\" href=\"diesel/query_builder/trait.Query.html\" title=\"trait diesel::query_builder::Query\">Query</a>&gt;::<a class=\"associatedtype\" href=\"diesel/query_builder/trait.Query.html#associatedtype.SqlType\" title=\"type diesel::query_builder::Query::SqlType\">SqlType</a></h4></section></summary><div class='docblock'>The SQL type of <code>Self::Query</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Query\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#232\">Source</a><a href=\"#associatedtype.Query\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"diesel/query_builder/trait.AsQuery.html#associatedtype.Query\" class=\"associatedtype\">Query</a> = <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, <a class=\"struct\" href=\"diesel/query_builder/struct.ReturningClause.html\" title=\"struct diesel::query_builder::ReturningClause\">ReturningClause</a>&lt;&lt;T as <a class=\"trait\" href=\"diesel/query_source/trait.Table.html\" title=\"trait diesel::query_source::Table\">Table</a>&gt;::<a class=\"associatedtype\" href=\"diesel/query_source/trait.Table.html#associatedtype.AllColumns\" title=\"type diesel::query_source::Table::AllColumns\">AllColumns</a>&gt;&gt;</h4></section></summary><div class='docblock'>What kind of query does this type represent?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_query\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#234-236\">Source</a><a href=\"#method.as_query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_builder/trait.AsQuery.html#tymethod.as_query\" class=\"fn\">as_query</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"diesel/query_builder/trait.AsQuery.html#associatedtype.Query\" title=\"type diesel::query_builder::AsQuery::Query\">Query</a></h4></section></summary><div class='docblock'>Converts a type which semantically represents a SQL query into the\nactual query being executed. See the trait level docs for more.</div></details></div></details>","AsQuery","diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BoxedDsl%3C'a,+DB%3E-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#172-187\">Source</a><a href=\"#impl-BoxedDsl%3C'a,+DB%3E-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, U, V, Ret, DB&gt; <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.BoxedDsl.html\" title=\"trait diesel::query_dsl::methods::BoxedDsl\">BoxedDsl</a>&lt;'a, DB&gt; for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;BoxedWhereClause&lt;'a, DB&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#177\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"diesel/query_dsl/methods/trait.BoxedDsl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, BoxedWhereClause&lt;'a, DB&gt;, V, Ret&gt;</h4></section></summary><div class='docblock'>The return type of <code>internal_into_boxed</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.internal_into_boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#179-186\">Source</a><a href=\"#method.internal_into_boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_dsl/methods/trait.BoxedDsl.html#tymethod.internal_into_boxed\" class=\"fn\">internal_into_boxed</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"diesel/query_dsl/methods/trait.BoxedDsl.html#associatedtype.Output\" title=\"type diesel::query_dsl::methods::BoxedDsl::Output\">Output</a></h4></section></summary><div class='docblock'>See the trait documentation.</div></details></div></details>","BoxedDsl<'a, DB>","diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#50\">Source</a><a href=\"#impl-Clone-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>, U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Ret: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"diesel/query_source/trait.QuerySource.html#associatedtype.FromClause\" title=\"type diesel::query_source::QuerySource::FromClause\">FromClause</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#50\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#50\">Source</a><a href=\"#impl-Debug-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>, U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, Ret: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"diesel/query_source/trait.QuerySource.html#associatedtype.FromClause\" title=\"type diesel::query_source::QuerySource::FromClause\">FromClause</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#50\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FilterDsl%3CPredicate%3E-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#154-170\">Source</a><a href=\"#impl-FilterDsl%3CPredicate%3E-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, V, Ret, Predicate&gt; <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.FilterDsl.html\" title=\"trait diesel::query_dsl::methods::FilterDsl\">FilterDsl</a>&lt;Predicate&gt; for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>,\n    U: WhereAnd&lt;Predicate&gt;,\n    Predicate: <a class=\"trait\" href=\"diesel/expression/trait.AppearsOnTable.html\" title=\"trait diesel::expression::AppearsOnTable\">AppearsOnTable</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#160\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"diesel/query_dsl/methods/trait.FilterDsl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, &lt;U as WhereAnd&lt;Predicate&gt;&gt;::Output, V, Ret&gt;</h4></section></summary><div class='docblock'>The type returned by <code>.filter</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#162-169\">Source</a><a href=\"#method.filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_dsl/methods/trait.FilterDsl.html#tymethod.filter\" class=\"fn\">filter</a>(self, predicate: Predicate) -&gt; Self::<a class=\"associatedtype\" href=\"diesel/query_dsl/methods/trait.FilterDsl.html#associatedtype.Output\" title=\"type diesel::query_dsl::methods::FilterDsl::Output\">Output</a></h4></section></summary><div class='docblock'>See the trait documentation.</div></details></div></details>","FilterDsl<Predicate>","diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Query-for-UpdateStatement%3CT,+U,+V,+ReturningClause%3CRet%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#239-246\">Source</a><a href=\"#impl-Query-for-UpdateStatement%3CT,+U,+V,+ReturningClause%3CRet%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, V, Ret&gt; <a class=\"trait\" href=\"diesel/query_builder/trait.Query.html\" title=\"trait diesel::query_builder::Query\">Query</a> for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, <a class=\"struct\" href=\"diesel/query_builder/struct.ReturningClause.html\" title=\"struct diesel::query_builder::ReturningClause\">ReturningClause</a>&lt;Ret&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"diesel/query_source/trait.Table.html\" title=\"trait diesel::query_source::Table\">Table</a>,\n    Ret: <a class=\"trait\" href=\"diesel/expression/trait.Expression.html\" title=\"trait diesel::expression::Expression\">Expression</a> + <a class=\"trait\" href=\"diesel/expression/trait.SelectableExpression.html\" title=\"trait diesel::expression::SelectableExpression\">SelectableExpression</a>&lt;T&gt; + <a class=\"trait\" href=\"diesel/expression/trait.ValidGrouping.html\" title=\"trait diesel::expression::ValidGrouping\">ValidGrouping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;,\n    Ret::<a class=\"associatedtype\" href=\"diesel/expression/trait.ValidGrouping.html#associatedtype.IsAggregate\" title=\"type diesel::expression::ValidGrouping::IsAggregate\">IsAggregate</a>: <a class=\"trait\" href=\"diesel/expression/trait.MixedAggregates.html\" title=\"trait diesel::expression::MixedAggregates\">MixedAggregates</a>&lt;<a class=\"struct\" href=\"diesel/expression/is_aggregate/struct.No.html\" title=\"struct diesel::expression::is_aggregate::No\">No</a>, Output = <a class=\"struct\" href=\"diesel/expression/is_aggregate/struct.No.html\" title=\"struct diesel::expression::is_aggregate::No\">No</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SqlType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#245\">Source</a><a href=\"#associatedtype.SqlType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"diesel/query_builder/trait.Query.html#associatedtype.SqlType\" class=\"associatedtype\">SqlType</a> = &lt;Ret as <a class=\"trait\" href=\"diesel/expression/trait.Expression.html\" title=\"trait diesel::expression::Expression\">Expression</a>&gt;::<a class=\"associatedtype\" href=\"diesel/expression/trait.Expression.html#associatedtype.SqlType\" title=\"type diesel::expression::Expression::SqlType\">SqlType</a></h4></section></summary><div class='docblock'>The SQL type that this query represents. <a href=\"diesel/query_builder/trait.Query.html#associatedtype.SqlType\">Read more</a></div></details></div></details>","Query","diesel::query_builder::update_statement::BoxedUpdateStatement"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryFragment%3CDB%3E-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#189-212\">Source</a><a href=\"#impl-QueryFragment%3CDB%3E-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, V, Ret, DB&gt; <a class=\"trait\" href=\"diesel/query_builder/trait.QueryFragment.html\" title=\"trait diesel::query_builder::QueryFragment\">QueryFragment</a>&lt;DB&gt; for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a> + <a class=\"trait\" href=\"diesel/backend/trait.DieselReserveSpecialization.html\" title=\"trait diesel::backend::DieselReserveSpecialization\">DieselReserveSpecialization</a>,\n    T: <a class=\"trait\" href=\"diesel/query_source/trait.Table.html\" title=\"trait diesel::query_source::Table\">Table</a>,\n    T::<a class=\"associatedtype\" href=\"diesel/query_source/trait.QuerySource.html#associatedtype.FromClause\" title=\"type diesel::query_source::QuerySource::FromClause\">FromClause</a>: <a class=\"trait\" href=\"diesel/query_builder/trait.QueryFragment.html\" title=\"trait diesel::query_builder::QueryFragment\">QueryFragment</a>&lt;DB&gt;,\n    U: <a class=\"trait\" href=\"diesel/query_builder/trait.QueryFragment.html\" title=\"trait diesel::query_builder::QueryFragment\">QueryFragment</a>&lt;DB&gt;,\n    V: <a class=\"trait\" href=\"diesel/query_builder/trait.QueryFragment.html\" title=\"trait diesel::query_builder::QueryFragment\">QueryFragment</a>&lt;DB&gt;,\n    Ret: <a class=\"trait\" href=\"diesel/query_builder/trait.QueryFragment.html\" title=\"trait diesel::query_builder::QueryFragment\">QueryFragment</a>&lt;DB&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.walk_ast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#198-211\">Source</a><a href=\"#method.walk_ast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_builder/trait.QueryFragment.html#tymethod.walk_ast\" class=\"fn\">walk_ast</a>&lt;'b&gt;(&amp;'b self, out: <a class=\"struct\" href=\"diesel/query_builder/struct.AstPass.html\" title=\"struct diesel::query_builder::AstPass\">AstPass</a>&lt;'_, 'b, DB&gt;) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Walk over this <code>QueryFragment</code> for all passes. <a href=\"diesel/query_builder/trait.QueryFragment.html#tymethod.walk_ast\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_sql\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/mod.rs.html#239-242\">Source</a><a href=\"#method.to_sql\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_builder/trait.QueryFragment.html#method.to_sql\" class=\"fn\">to_sql</a>(&amp;self, out: &amp;mut DB::<a class=\"associatedtype\" href=\"diesel/backend/trait.Backend.html#associatedtype.QueryBuilder\" title=\"type diesel::backend::Backend::QueryBuilder\">QueryBuilder</a>, backend: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;DB</a>) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Converts this <code>QueryFragment</code> to its SQL representation. <a href=\"diesel/query_builder/trait.QueryFragment.html#method.to_sql\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_binds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/mod.rs.html#253-260\">Source</a><a href=\"#method.collect_binds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_builder/trait.QueryFragment.html#method.collect_binds\" class=\"fn\">collect_binds</a>&lt;'b&gt;(\n    &amp;'b self,\n    out: &amp;mut DB::<a class=\"associatedtype\" href=\"diesel/backend/trait.Backend.html#associatedtype.BindCollector\" title=\"type diesel::backend::Backend::BindCollector\">BindCollector</a>&lt;'b&gt;,\n    metadata_lookup: &amp;mut DB::<a class=\"associatedtype\" href=\"diesel/sql_types/trait.TypeMetadata.html#associatedtype.MetadataLookup\" title=\"type diesel::sql_types::TypeMetadata::MetadataLookup\">MetadataLookup</a>,\n    backend: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'b DB</a>,\n) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Serializes all bind parameters in this query. <a href=\"diesel/query_builder/trait.QueryFragment.html#method.collect_binds\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_safe_to_cache_prepared\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/mod.rs.html#280-284\">Source</a><a href=\"#method.is_safe_to_cache_prepared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_builder/trait.QueryFragment.html#method.is_safe_to_cache_prepared\" class=\"fn\">is_safe_to_cache_prepared</a>(&amp;self, backend: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;DB</a>) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Is this query safe to store in the prepared statement cache? <a href=\"diesel/query_builder/trait.QueryFragment.html#method.is_safe_to_cache_prepared\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_noop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/mod.rs.html#290-294\">Source</a><a href=\"#method.is_noop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_builder/trait.QueryFragment.html#method.is_noop\" class=\"fn\">is_noop</a>(&amp;self, backend: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;DB</a>) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Does walking this AST have any effect?</div></details></div></details>","QueryFragment<DB>","diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryId-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#214-221\">Source</a><a href=\"#impl-QueryId-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, V, Ret&gt; <a class=\"trait\" href=\"diesel/query_builder/trait.QueryId.html\" title=\"trait diesel::query_builder::QueryId\">QueryId</a> for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.HAS_STATIC_QUERY_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#220\">Source</a><a href=\"#associatedconstant.HAS_STATIC_QUERY_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"diesel/query_builder/trait.QueryId.html#associatedconstant.HAS_STATIC_QUERY_ID\" class=\"constant\">HAS_STATIC_QUERY_ID</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = false</h4></section></summary><div class='docblock'>Can the SQL generated by <code>Self</code> be uniquely identified by its type? <a href=\"diesel/query_builder/trait.QueryId.html#associatedconstant.HAS_STATIC_QUERY_ID\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.QueryId\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#218\">Source</a><a href=\"#associatedtype.QueryId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"diesel/query_builder/trait.QueryId.html#associatedtype.QueryId\" class=\"associatedtype\">QueryId</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>A type which uniquely represents <code>Self</code> in a SQL query. <a href=\"diesel/query_builder/trait.QueryId.html#associatedtype.QueryId\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.query_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/query_id.rs.html#62-68\">Source</a><a href=\"#method.query_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_builder/trait.QueryId.html#method.query_id\" class=\"fn\">query_id</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the type id of <code>Self::QueryId</code> if <code>Self::HAS_STATIC_QUERY_ID</code>.\nReturns <code>None</code> otherwise. <a href=\"diesel/query_builder/trait.QueryId.html#method.query_id\">Read more</a></div></details></div></details>","QueryId","diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RunQueryDsl%3CConn%3E-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#248\">Source</a><a href=\"#impl-RunQueryDsl%3CConn%3E-for-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>, U, V, Ret, Conn&gt; <a class=\"trait\" href=\"diesel/query_dsl/trait.RunQueryDsl.html\" title=\"trait diesel::query_dsl::RunQueryDsl\">RunQueryDsl</a>&lt;Conn&gt; for <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_dsl/mod.rs.html#1478-1484\">Source</a><a href=\"#method.execute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.execute\" class=\"fn\">execute</a>(self, conn: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Conn</a>) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Conn: <a class=\"trait\" href=\"diesel/connection/trait.Connection.html\" title=\"trait diesel::connection::Connection\">Connection</a>,\n    Self: <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.ExecuteDsl.html\" title=\"trait diesel::query_dsl::methods::ExecuteDsl\">ExecuteDsl</a>&lt;Conn&gt;,</div></h4></section></summary><div class='docblock'>Executes the given command, returning the number of rows affected. <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.execute\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_dsl/mod.rs.html#1590-1595\">Source</a><a href=\"#method.load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.load\" class=\"fn\">load</a>&lt;'query, U&gt;(self, conn: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Conn</a>) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.LoadQuery.html\" title=\"trait diesel::query_dsl::methods::LoadQuery\">LoadQuery</a>&lt;'query, Conn, U&gt;,</div></h4></section></summary><div class='docblock'>Executes the given query, returning a <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec</code></a> with the returned rows. <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.load\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_dsl/mod.rs.html#1718-1727\">Source</a><a href=\"#method.load_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.load_iter\" class=\"fn\">load_iter</a>&lt;'conn, 'query: 'conn, U, B&gt;(\n    self,\n    conn: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'conn mut Conn</a>,\n) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;Self::<a class=\"associatedtype\" href=\"diesel/query_dsl/methods/trait.LoadQuery.html#associatedtype.RowIter\" title=\"type diesel::query_dsl::methods::LoadQuery::RowIter\">RowIter</a>&lt;'conn&gt;&gt;<div class=\"where\">where\n    U: 'conn,\n    Self: <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.LoadQuery.html\" title=\"trait diesel::query_dsl::methods::LoadQuery\">LoadQuery</a>&lt;'query, Conn, U, B&gt; + 'conn,</div></h4></section></summary><div class='docblock'>Executes the given query, returning an <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with the returned rows. <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.load_iter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_result\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_dsl/mod.rs.html#1774-1782\">Source</a><a href=\"#method.get_result\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.get_result\" class=\"fn\">get_result</a>&lt;'query, U&gt;(self, conn: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Conn</a>) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.LoadQuery.html\" title=\"trait diesel::query_dsl::methods::LoadQuery\">LoadQuery</a>&lt;'query, Conn, U&gt;,</div></h4></section></summary><div class='docblock'>Runs the command, and returns the affected row. <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.get_result\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_results\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/diesel/query_dsl/mod.rs.html#1790-1795\">Source</a><a href=\"#method.get_results\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.get_results\" class=\"fn\">get_results</a>&lt;'query, U&gt;(self, conn: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Conn</a>) -&gt; <a class=\"type\" href=\"diesel/result/type.QueryResult.html\" title=\"type diesel::result::QueryResult\">QueryResult</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.LoadQuery.html\" title=\"trait diesel::query_dsl::methods::LoadQuery\">LoadQuery</a>&lt;'query, Conn, U&gt;,</div></h4></section></summary><div class='docblock'>Runs the command, returning an <code>Vec</code> with the affected rows. <a href=\"diesel/query_dsl/trait.RunQueryDsl.html#method.get_results\">Read more</a></div></details></div></details>","RunQueryDsl<Conn>","diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpdateStatement%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#20-48\">Source</a><a href=\"#impl-UpdateStatement%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>, U&gt; <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, SetNotCalled&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#35-47\">Source</a><h4 class=\"code-header\">pub fn <a href=\"diesel/query_builder/struct.UpdateStatement.html#tymethod.set\" class=\"fn\">set</a>&lt;V&gt;(self, values: V) -&gt; <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V::<a class=\"associatedtype\" href=\"diesel/query_builder/trait.AsChangeset.html#associatedtype.Changeset\" title=\"type diesel::query_builder::AsChangeset::Changeset\">Changeset</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"diesel/query_source/trait.Table.html\" title=\"trait diesel::query_source::Table\">Table</a>,\n    V: <a class=\"trait\" href=\"diesel/query_builder/trait.AsChangeset.html\" title=\"trait diesel::query_builder::AsChangeset\">AsChangeset</a>&lt;Target = T&gt;,\n    <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V::<a class=\"associatedtype\" href=\"diesel/query_builder/trait.AsChangeset.html#associatedtype.Changeset\" title=\"type diesel::query_builder::AsChangeset::Changeset\">Changeset</a>&gt;: <a class=\"trait\" href=\"diesel/query_builder/trait.AsQuery.html\" title=\"trait diesel::query_builder::AsQuery\">AsQuery</a>,</div></h4></section></summary><div class=\"docblock\"><p>Provides the <code>SET</code> clause of the <code>UPDATE</code> statement.</p>\n<p>See <a href=\"diesel/fn.update.html\" title=\"fn diesel::update\"><code>update</code></a> for usage examples, or <a href=\"https://diesel.rs/guides/all-about-updates/\">the update\nguide</a> for a more exhaustive\nset of examples.</p>\n</div></details></div></details>",0,"diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpdateStatement%3CT,+U,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#250-284\">Source</a><a href=\"#impl-UpdateStatement%3CT,+U,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>, U, V&gt; <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, NoReturningClause&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.returning\" class=\"method\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#272-283\">Source</a><h4 class=\"code-header\">pub fn <a href=\"diesel/query_builder/struct.UpdateStatement.html#tymethod.returning\" class=\"fn\">returning</a>&lt;E&gt;(\n    self,\n    returns: E,\n) -&gt; <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, <a class=\"struct\" href=\"diesel/query_builder/struct.ReturningClause.html\" title=\"struct diesel::query_builder::ReturningClause\">ReturningClause</a>&lt;E&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"diesel/query_source/trait.Table.html\" title=\"trait diesel::query_source::Table\">Table</a>,\n    <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, <a class=\"struct\" href=\"diesel/query_builder/struct.ReturningClause.html\" title=\"struct diesel::query_builder::ReturningClause\">ReturningClause</a>&lt;E&gt;&gt;: <a class=\"trait\" href=\"diesel/query_builder/trait.Query.html\" title=\"trait diesel::query_builder::Query\">Query</a>,</div></h4></section></summary><div class=\"docblock\"><p>Specify what expression is returned after execution of the <code>update</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5><h6 id=\"updating-a-single-record\"><a class=\"doc-anchor\" href=\"#updating-a-single-record\">§</a>Updating a single record:</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>updated_name = diesel::update(users.filter(id.eq(<span class=\"number\">1</span>)))\n    .set(name.eq(<span class=\"string\">\"Dean\"</span>))\n    .returning(name)\n    .get_result(connection);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Ok</span>(<span class=\"string\">\"Dean\"</span>.to_string()), updated_name);</code></pre></div></div></details></div></details>",0,"diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#68-152\">Source</a><a href=\"#impl-UpdateStatement%3CT,+U,+V,+Ret%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"diesel/query_source/trait.QuerySource.html\" title=\"trait diesel::query_source::QuerySource\">QuerySource</a>, U, V, Ret&gt; <a class=\"struct\" href=\"diesel/query_builder/struct.UpdateStatement.html\" title=\"struct diesel::query_builder::UpdateStatement\">UpdateStatement</a>&lt;T, U, V, Ret&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#96-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"diesel/query_builder/struct.UpdateStatement.html#tymethod.filter\" class=\"fn\">filter</a>&lt;Predicate&gt;(self, predicate: Predicate) -&gt; <a class=\"type\" href=\"diesel/dsl/type.Filter.html\" title=\"type diesel::dsl::Filter\">Filter</a>&lt;Self, Predicate&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.FilterDsl.html\" title=\"trait diesel::query_dsl::methods::FilterDsl\">FilterDsl</a>&lt;Predicate&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Adds the given predicate to the <code>WHERE</code> clause of the statement being\nconstructed.</p>\n<p>If there is already a <code>WHERE</code> clause, the predicate will be appended\nwith <code>AND</code>. There is no difference in behavior between\n<code>update(table.filter(x))</code> and <code>update(table).filter(x)</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>updated_rows = diesel::update(users)\n    .set(name.eq(<span class=\"string\">\"Jim\"</span>))\n    .filter(name.eq(<span class=\"string\">\"Sean\"</span>))\n    .execute(connection);\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Ok</span>(<span class=\"number\">1</span>), updated_rows);\n\n<span class=\"kw\">let </span>expected_names = <span class=\"macro\">vec!</span>[<span class=\"string\">\"Jim\"</span>.to_string(), <span class=\"string\">\"Tess\"</span>.to_string()];\n<span class=\"kw\">let </span>names = users.select(name).order(id).load(connection);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Ok</span>(expected_names), names);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed\" class=\"method\"><a class=\"src rightside\" href=\"src/diesel/query_builder/update_statement/mod.rs.html#145-151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"diesel/query_builder/struct.UpdateStatement.html#tymethod.into_boxed\" class=\"fn\">into_boxed</a>&lt;'a, DB&gt;(self) -&gt; <a class=\"type\" href=\"diesel/dsl/type.IntoBoxed.html\" title=\"type diesel::dsl::IntoBoxed\">IntoBoxed</a>&lt;'a, Self, DB&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>,\n    Self: <a class=\"trait\" href=\"diesel/query_dsl/methods/trait.BoxedDsl.html\" title=\"trait diesel::query_dsl::methods::BoxedDsl\">BoxedDsl</a>&lt;'a, DB&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Boxes the <code>WHERE</code> clause of this update statement.</p>\n<p>This is useful for cases where you want to conditionally modify a query,\nbut need the type to remain the same. The backend must be specified as\npart of this. It is not possible to box a query and have it be useable\non multiple backends.</p>\n<p>A boxed query will incur a minor performance penalty, as the query builder\ncan no longer be inlined by the compiler. For most applications this cost\nwill be minimal.</p>\n<h6 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>query = diesel::update(users).set(name.eq(<span class=\"string\">\"Jerk\"</span>)).into_boxed();\n\n<span class=\"kw\">if </span>!params[<span class=\"string\">\"tess_has_been_a_jerk\"</span>] {\n    query = query.filter(name.ne(<span class=\"string\">\"Tess\"</span>));\n}\n\n<span class=\"kw\">let </span>updated_rows = query.execute(connection)<span class=\"question-mark\">?</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, updated_rows);\n\n<span class=\"kw\">let </span>expected_names = <span class=\"macro\">vec!</span>[<span class=\"string\">\"Jerk\"</span>, <span class=\"string\">\"Tess\"</span>];\n<span class=\"kw\">let </span>names = users.select(name).order(id).load::&lt;String&gt;(connection)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(expected_names, names);</code></pre></div></div></details></div></details>",0,"diesel::query_builder::update_statement::BoxedUpdateStatement","diesel::helper_types::Update","diesel::helper_types::update","diesel::helper_types::Set"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[52035]}