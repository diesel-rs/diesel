searchState.loadedDescShard("quickcheck", 0, "This crate is a port of Haskell’s QuickCheck.\n<code>Arbitrary</code> describes types whose values can be randomly …\nGen represents a PRNG.\nThe main QuickCheck type for setting configuration and …\nDescribes the status of a single instance of a test.\n<code>Testable</code> describes types (e.g., a function) whose values …\nReturn an arbitrary value.\nChoose among the possible alternatives in the slice given. …\nProduces a test result that instructs <code>quickcheck</code> to ignore …\nCreates a shrinker with zero elements.\nProduces a test result that indicates failure from a …\nProduces a test result that indicates the current test has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>bool</code> to a <code>TestResult</code>. A <code>true</code> value indicates …\nSet the random number generator to be used by QuickCheck.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if and only if this test result describes a …\nReturns <code>true</code> if and only if this test result describes a …\nSet the maximum number of tests to run.\nSet the minimum number of tests that needs to pass.\nTests if a “procedure” fails when executed. The test …\nReturns a <code>Gen</code> with the given size configuration.\nCreates a new QuickCheck value.\nProduces a test result that indicates the current test has …\nConvenience function for running QuickCheck.\nTests a property and calls <code>panic!</code> on failure.\nA macro for writing quickcheck tests.\nTests a property and returns the result.\nReturn an iterator of values that are smaller than itself.\nReturn an iterator of values that are smaller than itself.\nCreates a shrinker with a single element.\nReturns the size configured with this generator.\nSet the number of tests to run.")