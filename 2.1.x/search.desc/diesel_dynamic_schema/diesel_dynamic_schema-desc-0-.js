searchState.loadedDescShard("diesel_dynamic_schema", 0, "Diesel dynamic schema\nA database table column. A database table column. This …\nRepresents a dynamically sized select clause\nA database schema. A database schema. This type is created …\nA database table. A database table. This type is created …\nAdds the field to the dynamically sized select clause\nCreate a column with this table.\nThis module provides a container that allows to receive a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the name of the column, as provided on creation.\nGets the name of the schema, as specified on creation.\nGets the name of the table, as specified on creation.\nConstructs a new dynamically sized select clause without …\nCreate a new <code>Schema</code> with the given name.\nCreate a new <code>Table</code> with the given name.\nGets a reference to the table of the column.\nCreate a table with this schema.\nA marker type used to indicate that the provided <code>FromSql</code> …\nA dynamically sized container that allows to receive a not …\nA helper struct used as field type in <code>DynamicRow</code> to also …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new dynamic row instance with corresponding field …\nCreate a new dynamic row from an existing database row\nGet the field value at the provided row index\nGet the field value by the provided field name\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the current row is empty\nGet the number of fields in the current row\nName of the field\nActual field value")