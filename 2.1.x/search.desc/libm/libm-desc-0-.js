searchState.loadedDescShard("libm", 0, "libm in pure Rust\nGeneric helper for libm functions, abstracting over f32 …\nArccosine (f64)\nArccosine (f32)\nInverse hyperbolic cosine (f64)\nInverse hyperbolic cosine (f32)\nArcsine (f64)\nArcsine (f32)\nInverse hyperbolic sine (f64)\nInverse hyperbolic sine (f32)\nArctangent (f64)\nArctangent of y/x (f64)\nArctangent of y/x (f32)\nArctangent (f32)\nInverse hyperbolic tangent (f64)\nInverse hyperbolic tangent (f32)\nComputes the cube root of the argument.\nCube root (f32)\nCeil (f64)\nCeil (f32)\nSign of Y, magnitude of X (f64)\nSign of Y, magnitude of X (f32)\nHyperbolic cosine (f64)\nHyperbolic cosine (f64)\nError function (f64)\nComplementary error function (f64)\nComplementary error function (f32)\nError function (f32)\nExponential, base <em>e</em> (f64)\nExponential, base 2 (f64)\nExponential, base 2 (f32)\nExponential, base <em>e</em> (f32)\nExponential, base <em>e</em>, of x-1 (f64)\nExponential, base <em>e</em>, of x-1 (f32)\nAbsolute value (magnitude) (f64) Calculates the absolute …\nAbsolute value (magnitude) (f32) Calculates the absolute …\nPositive difference (f64)\nPositive difference (f32)\nFloor (f64)\nFloor (f32)\nFloating multiply add (f64)\nFloating multiply add (f32)\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")