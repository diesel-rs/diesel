searchState.loadedDescShard("ipnet", 0, "Types for IPv4 and IPv6 network addresses.\nAn error which can be returned when parsing an IP network …\nProvides a <code>saturating_add()</code> method for <code>Ipv4Addr</code> and …\nAn <code>Iterator</code> over a range of IP addresses, either IPv4 or …\nProvides a <code>bitand()</code> method for <code>Ipv4Addr</code> and <code>Ipv6Addr</code>.\nProvides a <code>bitor()</code> method for <code>Ipv4Addr</code> and <code>Ipv6Addr</code>.\nAn IP network address, either IPv4 or IPv6.\nProvides a <code>saturating_sub()</code> method for <code>Ipv4Addr</code> and …\nAn <code>Iterator</code> that generates IP network addresses, either …\nAn <code>Iterator</code> over a range of IPv4 addresses.\nAn IPv4 network address.\nAn <code>Iterator</code> that generates IPv4 network addresses.\nAn <code>Iterator</code> over a range of IPv6 addresses.\nAn IPv6 network address.\nAn <code>Iterator</code> that generates IPv6 network addresses.\nAn error which can be returned when the prefix length is …\nReturns the address.\nReturns the address.\nReturns the address.\nAggregate a <code>Vec</code> of <code>IpNet</code>s and return the result as a new …\nAggregate a <code>Vec</code> of <code>Ipv4Net</code>s and return the result as a new …\nAggregate a <code>Vec</code> of <code>Ipv6Net</code>s and return the result as a new …\nReturns the broadcast address.\nReturns the broadcast address.\nReturns the last address.\nTest if a network address contains either another network …\nTest if a network address contains either another network …\nTest if a network address contains either another network …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the host mask.\nReturns the host mask.\nReturns the host mask.\nReturn an <code>Iterator</code> over the host addresses in this network.\nReturn an <code>Iterator</code> over the host addresses in this network.\nReturn an <code>Iterator</code> over the host addresses in this network.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a <code>IpAddr</code> network mask into a prefix.\nConverts a <code>Ipv4Addr</code> network mask into a prefix.\nConverts a <code>Ipv6Addr</code> network mask into a prefix.\nReturns <code>true</code> if this network and the given network are  …\nReturns <code>true</code> if this network and the given network are  …\nReturns <code>true</code> if this network and the given network are  …\nReturns the maximum valid prefix length.\nReturns the maximum valid prefix length.\nReturns the maximum valid prefix length.\nReturns the network mask.\nReturns the network mask.\nReturns the network mask.\nReturns the network address.\nReturns the network address.\nReturns the network address.\nCreates a new IP network address from an <code>IpAddr</code> and prefix …\nCreates a new IPv4 network address from an <code>Ipv4Addr</code> and …\nCreates a new IPv6 network address from an <code>Ipv6Addr</code> and …\nReturns the prefix length.\nReturns the prefix length.\nReturns the prefix length.\nReturns an <code>Iterator</code> over the subnets of this network with …\nReturns an <code>Iterator</code> over the subnets of this network with …\nReturns an <code>Iterator</code> over the subnets of this network with …\nReturns the <code>IpNet</code> that contains this one.\nReturns the <code>Ipv4Net</code> that contains this one.\nReturns the <code>Ipv6Net</code> that contains this one.\nReturns a copy of the network with the address truncated …\nReturns a copy of the network with the address truncated …\nReturns a copy of the network with the address truncated …\nCreates a new IP network address from an <code>IpAddr</code> and …\nCreates a new IPv4 network address from an <code>Ipv4Addr</code> and …\nCreates a new IPv6 network address from an <code>Ipv6Addr</code> and …")