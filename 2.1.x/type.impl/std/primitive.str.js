(function() {var type_impls = {
"winnow":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBStr-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2005-2010\">source</a><a href=\"#impl-AsBStr-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.AsBStr.html\" title=\"trait winnow::stream::AsBStr\">AsBStr</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bstr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2007-2009\">source</a><a href=\"#method.as_bstr\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.AsBStr.html#tymethod.as_bstr\" class=\"fn\">as_bstr</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">â“˜</a></h4></section></summary><div class='docblock'>Casts the input type to a byte slice</div></details></div></details>","AsBStr","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3C%26%5Bu8%5D%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2332-2342\">source</a><a href=\"#impl-Compare%3C%26%5Bu8%5D%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2334-2336\">source</a><a href=\"#method.compare\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_no_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2339-2341\">source</a><a href=\"#method.compare_no_case\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\" class=\"fn\">compare_no_case</a>(&amp;self, t: &amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.20: Replaced with <code>compare(ascii::Caseless(_))</code></span></div></span><div class='docblock'>Compares self to another value for equality\nindependently of the case. <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\">Read more</a></div></details></div></details>","Compare<&'b [u8]>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3C%26str%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2256-2267\">source</a><a href=\"#impl-Compare%3C%26str%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2258-2260\">source</a><a href=\"#method.compare\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: &amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_no_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2264-2266\">source</a><a href=\"#method.compare_no_case\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\" class=\"fn\">compare_no_case</a>(&amp;self, t: &amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.20: Replaced with <code>compare(ascii::Caseless(_))</code></span></div></span><div class='docblock'>Compares self to another value for equality\nindependently of the case. <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\">Read more</a></div></details></div></details>","Compare<&'b str>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3C%26%5Bu8%5D%3E%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2344-2354\">source</a><a href=\"#impl-Compare%3CCaseless%3C%26%5Bu8%5D%3E%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2346-2348\">source</a><a href=\"#method.compare\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">AsciiCaseless</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_no_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2351-2353\">source</a><a href=\"#method.compare_no_case\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\" class=\"fn\">compare_no_case</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">AsciiCaseless</a>&lt;&amp;'b [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.20: Replaced with <code>compare(ascii::Caseless(_))</code></span></div></span><div class='docblock'>Compares self to another value for equality\nindependently of the case. <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\">Read more</a></div></details></div></details>","Compare<Caseless<&'b [u8]>>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3C%26str%3E%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2269-2280\">source</a><a href=\"#impl-Compare%3CCaseless%3C%26str%3E%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2271-2273\">source</a><a href=\"#method.compare\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">AsciiCaseless</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_no_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2277-2279\">source</a><a href=\"#method.compare_no_case\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\" class=\"fn\">compare_no_case</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">AsciiCaseless</a>&lt;&amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.20: Replaced with <code>compare(ascii::Caseless(_))</code></span></div></span><div class='docblock'>Compares self to another value for equality\nindependently of the case. <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\">Read more</a></div></details></div></details>","Compare<Caseless<&'b str>>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3Cchar%3E%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2319-2330\">source</a><a href=\"#impl-Compare%3CCaseless%3Cchar%3E%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2321-2323\">source</a><a href=\"#method.compare\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">AsciiCaseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_no_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2327-2329\">source</a><a href=\"#method.compare_no_case\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\" class=\"fn\">compare_no_case</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">AsciiCaseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.20: Replaced with <code>compare(ascii::Caseless(_))</code></span></div></span><div class='docblock'>Compares self to another value for equality\nindependently of the case. <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\">Read more</a></div></details></div></details>","Compare<Caseless<char>>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3CCaseless%3Cu8%3E%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2294-2304\">source</a><a href=\"#impl-Compare%3CCaseless%3Cu8%3E%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">Caseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2296-2298\">source</a><a href=\"#method.compare\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">AsciiCaseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_no_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2301-2303\">source</a><a href=\"#method.compare_no_case\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\" class=\"fn\">compare_no_case</a>(&amp;self, t: <a class=\"struct\" href=\"winnow/ascii/struct.Caseless.html\" title=\"struct winnow::ascii::Caseless\">AsciiCaseless</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.20: Replaced with <code>compare(ascii::Caseless(_))</code></span></div></span><div class='docblock'>Compares self to another value for equality\nindependently of the case. <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\">Read more</a></div></details></div></details>","Compare<Caseless<u8>>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3Cchar%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2306-2317\">source</a><a href=\"#impl-Compare%3Cchar%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2308-2310\">source</a><a href=\"#method.compare\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_no_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2314-2316\">source</a><a href=\"#method.compare_no_case\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\" class=\"fn\">compare_no_case</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.20: Replaced with <code>compare(ascii::Caseless(_))</code></span></div></span><div class='docblock'>Compares self to another value for equality\nindependently of the case. <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\">Read more</a></div></details></div></details>","Compare<char>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compare%3Cu8%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2282-2292\">source</a><a href=\"#impl-Compare%3Cu8%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2284-2286\">source</a><a href=\"#method.compare\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare\" class=\"fn\">compare</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><div class='docblock'>Compares self to another value for equality</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_no_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2289-2291\">source</a><a href=\"#method.compare_no_case\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\" class=\"fn\">compare_no_case</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.20: Replaced with <code>compare(ascii::Caseless(_))</code></span></div></span><div class='docblock'>Compares self to another value for equality\nindependently of the case. <a href=\"winnow/stream/trait.Compare.html#tymethod.compare_no_case\">Read more</a></div></details></div></details>","Compare<u8>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/str/mod.rs.html#2742\">source</a></span><a href=\"#impl-Default-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/mod.rs.html#2745\">source</a><a href=\"#method.default\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty str</p>\n</div></details></div></details>","Default","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/str/mod.rs.html#2816\">source</a></span><a href=\"#impl-Error-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/error.rs.html#84\">source</a></span><a href=\"#method.source\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>The lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/error.rs.html#110\">source</a></span><a href=\"#method.description\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/error.rs.html#120\">source</a></span><a href=\"#method.cause\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/error.rs.html#184\">source</a><a href=\"#method.provide\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/nightly/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C%26str%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2597-2602\">source</a><a href=\"#impl-FindSlice%3C%26str%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i, 's&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2599-2601\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<&'s str>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2604-2609\">source</a><a href=\"#impl-FindSlice%3C(%26str,)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i, 's&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2606-2608\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str,)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,+%26str)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2611-2616\">source</a><a href=\"#impl-FindSlice%3C(%26str,+%26str)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i, 's&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2613-2615\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str, &'s str)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(%26str,+%26str,+%26str)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2618-2623\">source</a><a href=\"#impl-FindSlice%3C(%26str,+%26str,+%26str)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i, 's&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2620-2622\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(&'s str, &'s str, &'s str)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2632-2637\">source</a><a href=\"#impl-FindSlice%3C(char,)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>,)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2634-2636\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>,)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char,)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,+char)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2639-2644\">source</a><a href=\"#impl-FindSlice%3C(char,+char)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2641-2643\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char, char)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(char,+char,+char)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2646-2651\">source</a><a href=\"#impl-FindSlice%3C(char,+char,+char)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2648-2650\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(char, char, char)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(u8,)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2660-2665\">source</a><a href=\"#impl-FindSlice%3C(u8,)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2662-2664\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(u8,)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(u8,+u8)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2667-2672\">source</a><a href=\"#impl-FindSlice%3C(u8,+u8)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2669-2671\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(u8, u8)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3C(u8,+u8,+u8)%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2674-2679\">source</a><a href=\"#impl-FindSlice%3C(u8,+u8,+u8)%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2676-2678\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<(u8, u8, u8)>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3Cchar%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2625-2630\">source</a><a href=\"#impl-FindSlice%3Cchar%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2627-2629\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<char>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FindSlice%3Cu8%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2653-2658\">source</a><a href=\"#impl-FindSlice%3Cu8%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.FindSlice.html\" title=\"trait winnow::stream::FindSlice\">FindSlice</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2655-2657\">source</a><a href=\"#method.find_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.FindSlice.html#tymethod.find_slice\" class=\"fn\">find_slice</a>(&amp;self, substr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the offset of the slice if it is found</div></details></div></details>","FindSlice<u8>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Offset%3C%3C%26str+as+Stream%3E::Checkpoint%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1772-1777\">source</a><a href=\"#impl-Offset%3C%3C%26str+as+Stream%3E::Checkpoint%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.Offset.html\" title=\"trait winnow::stream::Offset\">Offset</a>&lt;&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type winnow::stream::Stream::Checkpoint\">Checkpoint</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1774-1776\">source</a><a href=\"#method.offset_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Offset.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(&amp;self, other: &amp;&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type winnow::stream::Stream::Checkpoint\">Checkpoint</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Offset between the first byte of <code>start</code> and the first byte of <code>self</code>a <a href=\"winnow/stream/trait.Offset.html#tymethod.offset_from\">Read more</a></div></details></div></details>","Offset<<&'a str as Stream>::Checkpoint>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Offset-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1765-1770\">source</a><a href=\"#impl-Offset-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.Offset.html\" title=\"trait winnow::stream::Offset\">Offset</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1767-1769\">source</a><a href=\"#method.offset_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Offset.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(&amp;self, start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Offset between the first byte of <code>start</code> and the first byte of <code>self</code>a <a href=\"winnow/stream/trait.Offset.html#tymethod.offset_from\">Read more</a></div></details></div></details>","Offset","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseSlice%3CR%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2763-2768\">source</a><a href=\"#impl-ParseSlice%3CR%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt; <a class=\"trait\" href=\"winnow/stream/trait.ParseSlice.html\" title=\"trait winnow::stream::ParseSlice\">ParseSlice</a>&lt;R&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2765-2767\">source</a><a href=\"#method.parse_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.ParseSlice.html#tymethod.parse_slice\" class=\"fn\">parse_slice</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;R&gt;</h4></section></summary><div class='docblock'>Succeeds if <code>parse()</code> succeededThe <a href=\"winnow/stream/trait.ParseSlice.html#tymethod.parse_slice\">Read more</a></div></details></div></details>","ParseSlice<R>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parser%3CI,+%3CI+as+Stream%3E::Slice,+E%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#915-924\">source</a><a href=\"#impl-Parser%3CI,+%3CI+as+Stream%3E::Slice,+E%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'s, I, E: <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;&gt; <a class=\"trait\" href=\"winnow/trait.Parser.html\" title=\"trait winnow::Parser\">Parser</a>&lt;I, &lt;I as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a>, E&gt; for &amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Compare.html\" title=\"trait winnow::stream::Compare\">Compare</a>&lt;&amp;'s <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"winnow/stream/trait.StreamIsPartial.html\" title=\"trait winnow::stream::StreamIsPartial\">StreamIsPartial</a> + <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,</div></h3></section></summary><div class=\"docblock\"><p>This is a shortcut for <a href=\"winnow/token/fn.tag.html\" title=\"fn winnow::token::tag\"><code>tag</code></a>.</p>\n<h4 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">Â§</a>Example</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">fn </span>parser&lt;<span class=\"lifetime\">'s</span>&gt;(s: <span class=\"kw-2\">&amp;mut &amp;</span><span class=\"lifetime\">'s </span>str) -&gt; PResult&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'s </span>str, InputError&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'s </span>str&gt;&gt; {\n  alt((<span class=\"string\">\"Hello\"</span>, take(<span class=\"number\">5usize</span>))).parse_next(s)\n}\n\n<span class=\"macro\">assert_eq!</span>(parser.parse_peek(<span class=\"string\">\"Hello, World!\"</span>), <span class=\"prelude-val\">Ok</span>((<span class=\"string\">\", World!\"</span>, <span class=\"string\">\"Hello\"</span>)));\n<span class=\"macro\">assert_eq!</span>(parser.parse_peek(<span class=\"string\">\"Something\"</span>), <span class=\"prelude-val\">Ok</span>((<span class=\"string\">\"hing\"</span>, <span class=\"string\">\"Somet\"</span>)));\n<span class=\"macro\">assert_eq!</span>(parser.parse_peek(<span class=\"string\">\"Some\"</span>), <span class=\"prelude-val\">Err</span>(ErrMode::Backtrack(InputError::new(<span class=\"string\">\"Some\"</span>, ErrorKind::Slice))));\n<span class=\"macro\">assert_eq!</span>(parser.parse_peek(<span class=\"string\">\"\"</span>), <span class=\"prelude-val\">Err</span>(ErrMode::Backtrack(InputError::new(<span class=\"string\">\"\"</span>, ErrorKind::Slice))));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#921-923\">source</a><a href=\"#method.parse_next\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#tymethod.parse_next\" class=\"fn\">parse_next</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"type\" href=\"winnow/error/type.PResult.html\" title=\"type winnow::error::PResult\">PResult</a>&lt;&lt;I as <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a>, E&gt;</h4></section></summary><div class='docblock'>Take tokens from the <a href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\"><code>Stream</code></a>, turning it into the output <a href=\"winnow/trait.Parser.html#tymethod.parse_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_peek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#86-91\">source</a><a href=\"#method.parse_peek\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.parse_peek\" class=\"fn\">parse_peek</a>(&amp;mut self, input: I) -&gt; <a class=\"type\" href=\"winnow/error/type.IResult.html\" title=\"type winnow::error::IResult\">IResult</a>&lt;I, O, E&gt;</h4></section></summary><div class='docblock'>Take tokens from the <a href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\"><code>Stream</code></a>, turning it into the output <a href=\"winnow/trait.Parser.html#method.parse_peek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#137-142\">source</a><a href=\"#method.by_ref\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.ByRef.html\" title=\"struct winnow::combinator::ByRef\">ByRef</a>&lt;'_, Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Treat <code>&amp;mut Self</code> as a parser <a href=\"winnow/trait.Parser.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#161-167\">source</a><a href=\"#method.value\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.value\" class=\"fn\">value</a>&lt;O2&gt;(self, val: O2) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.Value.html\" title=\"struct winnow::combinator::Value\">Value</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Produce the provided value <a href=\"winnow/trait.Parser.html#method.value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#185-191\">source</a><a href=\"#method.default_value\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.default_value\" class=\"fn\">default_value</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.DefaultValue.html\" title=\"struct winnow::combinator::DefaultValue\">DefaultValue</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Produce a typeâ€™s default value <a href=\"winnow/trait.Parser.html#method.default_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.void\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#209-214\">source</a><a href=\"#method.void\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.void\" class=\"fn\">void</a>(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.Void.html\" title=\"struct winnow::combinator::Void\">Void</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Discards the output of the <code>Parser</code> <a href=\"winnow/trait.Parser.html#method.void\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.output_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#238-244\">source</a><a href=\"#method.output_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.output_into\" class=\"fn\">output_into</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.OutputInto.html\" title=\"struct winnow::combinator::OutputInto\">OutputInto</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;O2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parserâ€™s output to another type using <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>std::convert::From</code></a> <a href=\"winnow/trait.Parser.html#method.output_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recognize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#264-270\">source</a><a href=\"#method.recognize\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.recognize\" class=\"fn\">recognize</a>(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.Recognize.html\" title=\"struct winnow::combinator::Recognize\">Recognize</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Produce the consumed input as produced value. <a href=\"winnow/trait.Parser.html#method.recognize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_recognized\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#310-316\">source</a><a href=\"#method.with_recognized\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.with_recognized\" class=\"fn\">with_recognized</a>(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.WithRecognized.html\" title=\"struct winnow::combinator::WithRecognized\">WithRecognized</a>&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,</div></h4></section></summary><div class='docblock'>Produce the consumed input with the output <a href=\"winnow/trait.Parser.html#method.with_recognized\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#411-417\">source</a><a href=\"#method.map\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.map\" class=\"fn\">map</a>&lt;G, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.Map.html\" title=\"struct winnow::combinator::Map\">Map</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; O2,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps a function over the output of a parser <a href=\"winnow/trait.Parser.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#441-449\">source</a><a href=\"#method.try_map\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.try_map\" class=\"fn\">try_map</a>&lt;G, O2, E2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.TryMap.html\" title=\"struct winnow::combinator::TryMap\">TryMap</a>&lt;Self, G, I, O, O2, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;O2, E2&gt;,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"winnow/error/trait.FromExternalError.html\" title=\"trait winnow::error::FromExternalError\">FromExternalError</a>&lt;I, E2&gt;,</div></h4></section></summary><div class='docblock'>Applies a function returning a <code>Result</code> over the output of a parser. <a href=\"winnow/trait.Parser.html#method.try_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#476-484\">source</a><a href=\"#method.verify_map\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.verify_map\" class=\"fn\">verify_map</a>&lt;G, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.VerifyMap.html\" title=\"struct winnow::combinator::VerifyMap\">VerifyMap</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O2&gt;,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Apply both <a href=\"winnow/trait.Parser.html#method.verify\" title=\"method winnow::Parser::verify\"><code>Parser::verify</code></a> and <a href=\"winnow/trait.Parser.html#method.map\" title=\"method winnow::Parser::map\"><code>Parser::map</code></a>. <a href=\"winnow/trait.Parser.html#method.verify_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#519-526\">source</a><a href=\"#method.flat_map\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;G, H, O2&gt;(self, map: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.FlatMap.html\" title=\"struct winnow::combinator::FlatMap\">FlatMap</a>&lt;Self, G, H, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; H,\n    H: <a class=\"trait\" href=\"winnow/trait.Parser.html\" title=\"trait winnow::Parser\">Parser</a>&lt;I, O2, E&gt;,</div></h4></section></summary><div class='docblock'>Creates a parser from the output of this one <a href=\"winnow/trait.Parser.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#577-585\">source</a><a href=\"#method.parse_to\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.parse_to\" class=\"fn\">parse_to</a>&lt;O2&gt;(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.ParseTo.html\" title=\"struct winnow::combinator::ParseTo\">ParseTo</a>&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    O: <a class=\"trait\" href=\"winnow/stream/trait.ParseSlice.html\" title=\"trait winnow::stream::ParseSlice\">ParseSlice</a>&lt;O2&gt;,\n    E: <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Apply <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\"><code>std::str::FromStr</code></a> to the output of the parser <a href=\"winnow/trait.Parser.html#method.parse_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#609-619\">source</a><a href=\"#method.verify\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.verify\" class=\"fn\">verify</a>&lt;G, O2&gt;(self, filter: G) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.Verify.html\" title=\"struct winnow::combinator::Verify\">Verify</a>&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;O2</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;O2&gt;,\n    O2: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"winnow/error/trait.ParserError.html\" title=\"trait winnow::error::ParserError\">ParserError</a>&lt;I&gt;,</div></h4></section></summary><div class='docblock'>Returns the output of the child parser if it satisfies a verification function. <a href=\"winnow/trait.Parser.html#method.verify\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#627-635\">source</a><a href=\"#method.context\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.context\" class=\"fn\">context</a>&lt;C&gt;(self, context: C) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.Context.html\" title=\"struct winnow::combinator::Context\">Context</a>&lt;Self, I, O, E, C&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a>,\n    E: <a class=\"trait\" href=\"winnow/error/trait.AddContext.html\" title=\"trait winnow::error::AddContext\">AddContext</a>&lt;I, C&gt;,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class='docblock'>If parsing fails, add context to the error <a href=\"winnow/trait.Parser.html#method.context\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complete_err\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#653-658\">source</a><a href=\"#method.complete_err\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.complete_err\" class=\"fn\">complete_err</a>(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.CompleteErr.html\" title=\"struct winnow::combinator::CompleteErr\">CompleteErr</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms <a href=\"winnow/error/enum.ErrMode.html#variant.Incomplete\" title=\"variant winnow::error::ErrMode::Incomplete\"><code>Incomplete</code></a> into <a href=\"winnow/error/enum.ErrMode.html#variant.Backtrack\" title=\"variant winnow::error::ErrMode::Backtrack\"><code>Backtrack</code></a> <a href=\"winnow/trait.Parser.html#method.complete_err\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.err_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/parser.rs.html#662-668\">source</a><a href=\"#method.err_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/trait.Parser.html#method.err_into\" class=\"fn\">err_into</a>&lt;E2&gt;(self) -&gt; <a class=\"struct\" href=\"winnow/combinator/struct.ErrInto.html\" title=\"struct winnow::combinator::ErrInto\">ErrInto</a>&lt;Self, I, O, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parserâ€™s error to another type using <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>std::convert::From</code></a></div></details></div></details>","Parser<I, <I as Stream>::Slice, E>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBStr%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/impls.rs.html#483\">source</a><a href=\"#impl-PartialEq%3CBStr%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"winnow/stream/struct.BStr.html\" title=\"struct winnow::stream::BStr\">BStr</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/impls.rs.html#483\">source</a><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"winnow/stream/struct.BStr.html\" title=\"struct winnow::stream::BStr\">BStr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<BStr>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBytes%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/impls.rs.html#236\">source</a><a href=\"#impl-PartialEq%3CBytes%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"winnow/stream/struct.Bytes.html\" title=\"struct winnow::stream::Bytes\">Bytes</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/impls.rs.html#236\">source</a><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"winnow/stream/struct.Bytes.html\" title=\"struct winnow::stream::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Bytes>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CCow%3C'a,+str%3E%3E-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2354\">source</a></span><a href=\"#impl-PartialEq%3CCow%3C'a,+str%3E%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for &amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2354\">source</a><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2354\">source</a><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Cow<'a, str>>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3COsString%3E-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.29.0\">1.29.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#659\">source</a></span><a href=\"#impl-PartialEq%3COsString%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsString.html\" title=\"struct std::ffi::os_str::OsString\">OsString</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#661\">source</a><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsString.html\" title=\"struct std::ffi::os_str::OsString\">OsString</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<OsString>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CString%3E-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2350\">source</a></span><a href=\"#impl-PartialEq%3CString%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2350\">source</a><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/string.rs.html#2350\">source</a><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<String>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBStr%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/impls.rs.html#502\">source</a><a href=\"#impl-PartialOrd%3CBStr%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"winnow/stream/struct.BStr.html\" title=\"struct winnow::stream::BStr\">BStr</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/impls.rs.html#502\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"winnow/stream/struct.BStr.html\" title=\"struct winnow::stream::BStr\">BStr</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<BStr>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CBytes%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/impls.rs.html#255\">source</a><a href=\"#impl-PartialOrd%3CBytes%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"winnow/stream/struct.Bytes.html\" title=\"struct winnow::stream::Bytes\">Bytes</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/impls.rs.html#255\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"winnow/stream/struct.Bytes.html\" title=\"struct winnow::stream::Bytes\">Bytes</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Bytes>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pattern%3C'a%3E-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#952\">source</a><a href=\"#impl-Pattern%3C'a%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/pattern/trait.Pattern.html\" title=\"trait core::str::pattern::Pattern\">Pattern</a>&lt;'a&gt; for &amp;'b <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"docblock\"><p>Non-allocating substring search.</p>\n<p>Will handle the pattern <code>&quot;&quot;</code> as returning empty matches at each character\nboundary.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"Hello world\"</span>.find(<span class=\"string\">\"world\"</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">6</span>));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_prefix_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#962\">source</a><a href=\"#method.is_prefix_of\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/pattern/trait.Pattern.html#method.is_prefix_of\" class=\"fn\">is_prefix_of</a>(self, haystack: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Checks whether the pattern matches at the front of the haystack.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_contained_in\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#968\">source</a><a href=\"#method.is_contained_in\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/pattern/trait.Pattern.html#method.is_contained_in\" class=\"fn\">is_contained_in</a>(self, haystack: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Checks whether the pattern matches anywhere in the haystack</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strip_prefix_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#994\">source</a><a href=\"#method.strip_prefix_of\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/pattern/trait.Pattern.html#method.strip_prefix_of\" class=\"fn\">strip_prefix_of</a>(self, haystack: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Removes the pattern from the front of haystack, if it matches.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_suffix_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#1005\">source</a><a href=\"#method.is_suffix_of\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/pattern/trait.Pattern.html#method.is_suffix_of\" class=\"fn\">is_suffix_of</a>(self, haystack: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Checks whether the pattern matches at the back of the haystack.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strip_suffix_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#1011\">source</a><a href=\"#method.strip_suffix_of\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/pattern/trait.Pattern.html#method.strip_suffix_of\" class=\"fn\">strip_suffix_of</a>(self, haystack: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span></summary><div class=\"docblock\"><p>Removes the pattern from the back of haystack, if it matches.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Searcher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Searcher\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/pattern/trait.Pattern.html#associatedtype.Searcher\" class=\"associatedtype\">Searcher</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/pattern/struct.StrSearcher.html\" title=\"struct core::str::pattern::StrSearcher\">StrSearcher</a>&lt;'a, 'b&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span><div class='docblock'>Associated searcher for this pattern</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_searcher\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/str/pattern.rs.html#956\">source</a><a href=\"#method.into_searcher\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/pattern/trait.Pattern.html#tymethod.into_searcher\" class=\"fn\">into_searcher</a>(self, haystack: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/pattern/struct.StrSearcher.html\" title=\"struct core::str::pattern::StrSearcher\">StrSearcher</a>&lt;'a, 'b&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>pattern</code>)</span></div></span><div class='docblock'>Constructs the associated searcher from\n<code>self</code> and the <code>haystack</code> to search in.</div></details></div></details>","Pattern<'a>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceLen-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#450-455\">source</a><a href=\"#impl-SliceLen-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.SliceLen.html\" title=\"trait winnow::stream::SliceLen\">SliceLen</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#452-454\">source</a><a href=\"#method.slice_len\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.SliceLen.html#tymethod.slice_len\" class=\"fn\">slice_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the input length, as indicated by its name,\nand the name of the trait itself</div></details></div></details>","SliceLen","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stream-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#703-776\">source</a><a href=\"#impl-Stream-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'i&gt; <a class=\"trait\" href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\">Stream</a> for &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Token\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Token\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.Stream.html#associatedtype.Token\" class=\"associatedtype\">Token</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a></h4></section></summary><div class='docblock'>The smallest unit being parsed <a href=\"winnow/stream/trait.Stream.html#associatedtype.Token\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = &amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Sequence of <code>Token</code>s <a href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IterOffsets\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IterOffsets\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.Stream.html#associatedtype.IterOffsets\" class=\"associatedtype\">IterOffsets</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/iter/struct.CharIndices.html\" title=\"struct core::str::iter::CharIndices\">CharIndices</a>&lt;'i&gt;</h4></section></summary><div class='docblock'>Iterate with the offset from the current location</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Checkpoint\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Checkpoint\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" class=\"associatedtype\">Checkpoint</a> = <a class=\"struct\" href=\"winnow/stream/struct.Checkpoint.html\" title=\"struct winnow::stream::Checkpoint\">Checkpoint</a>&lt;&amp;'i <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>A parse location within the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_offsets\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#712-714\">source</a><a href=\"#method.iter_offsets\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.iter_offsets\" class=\"fn\">iter_offsets</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.IterOffsets\" title=\"type winnow::stream::Stream::IterOffsets\">IterOffsets</a></h4></section></summary><div class='docblock'>Iterate with the offset from the current location</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eof_offset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#716-718\">source</a><a href=\"#method.eof_offset\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.eof_offset\" class=\"fn\">eof_offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the offset to the end of the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_token\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#721-726\">source</a><a href=\"#method.next_token\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.next_token\" class=\"fn\">next_token</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type winnow::stream::Stream::Token\">Token</a>&gt;</h4></section></summary><div class='docblock'>Split off the next token from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_for\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#729-739\">source</a><a href=\"#method.offset_for\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.offset_for\" class=\"fn\">offset_for</a>&lt;P&gt;(&amp;self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type winnow::stream::Stream::Token\">Token</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Finds the offset of the next matching token</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#741-755\">source</a><a href=\"#method.offset_at\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.offset_at\" class=\"fn\">offset_at</a>(&amp;self, tokens: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"winnow/error/enum.Needed.html\" title=\"enum winnow::error::Needed\">Needed</a>&gt;</h4></section></summary><div class='docblock'>Get the offset for the number of <code>tokens</code> into the stream <a href=\"winnow/stream/trait.Stream.html#tymethod.offset_at\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#757-761\">source</a><a href=\"#method.next_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.next_slice\" class=\"fn\">next_slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a></h4></section></summary><div class='docblock'>Split off a slice of tokens from the input <a href=\"winnow/stream/trait.Stream.html#tymethod.next_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checkpoint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#764-766\">source</a><a href=\"#method.checkpoint\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.checkpoint\" class=\"fn\">checkpoint</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type winnow::stream::Stream::Checkpoint\">Checkpoint</a></h4></section></summary><div class='docblock'>Save the current parse location within the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#768-770\">source</a><a href=\"#method.reset\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;mut self, checkpoint: Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\" title=\"type winnow::stream::Stream::Checkpoint\">Checkpoint</a>)</h4></section></summary><div class='docblock'>Revert the stream to a prior <a href=\"winnow/stream/trait.Stream.html#associatedtype.Checkpoint\"><code>Self::Checkpoint</code></a> <a href=\"winnow/stream/trait.Stream.html#tymethod.reset\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#773-775\">source</a><a href=\"#method.raw\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#tymethod.raw\" class=\"fn\">raw</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a></h4></section></summary><div class='docblock'>Return the inner-most stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_token\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#564-571\">source</a><a href=\"#method.peek_token\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#method.peek_token\" class=\"fn\">peek_token</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(Self, Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Token\" title=\"type winnow::stream::Stream::Token\">Token</a>)&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Split off the next token from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#601-608\">source</a><a href=\"#method.peek_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#method.peek_slice\" class=\"fn\">peek_slice</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; (Self, Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a>)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Split off a slice of tokens from the input</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finish\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#612-614\">source</a><a href=\"#method.finish\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#method.finish\" class=\"fn\">finish</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a></h4></section></summary><div class='docblock'>Advance to the end of the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_finish\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#617-624\">source</a><a href=\"#method.peek_finish\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.Stream.html#method.peek_finish\" class=\"fn\">peek_finish</a>(&amp;self) -&gt; (Self, Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a>)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Advance to the end of the stream</div></details></div></details>","Stream","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StreamIsPartial-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1560-1573\">source</a><a href=\"#impl-StreamIsPartial-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.StreamIsPartial.html\" title=\"trait winnow::stream::StreamIsPartial\">StreamIsPartial</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PartialState\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PartialState\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" class=\"associatedtype\">PartialState</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Whether the stream is currently partial or complete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complete\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1563-1565\">source</a><a href=\"#method.complete\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.StreamIsPartial.html#tymethod.complete\" class=\"fn\">complete</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" title=\"type winnow::stream::StreamIsPartial::PartialState\">PartialState</a></h4></section></summary><div class='docblock'>Mark the stream is complete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.restore_partial\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1567\">source</a><a href=\"#method.restore_partial\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.StreamIsPartial.html#tymethod.restore_partial\" class=\"fn\">restore_partial</a>(&amp;mut self, _state: Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.StreamIsPartial.html#associatedtype.PartialState\" title=\"type winnow::stream::StreamIsPartial::PartialState\">PartialState</a>)</h4></section></summary><div class='docblock'>Restore the stream back to its previous state</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partial_supported\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1570-1572\">source</a><a href=\"#method.is_partial_supported\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.StreamIsPartial.html#tymethod.is_partial_supported\" class=\"fn\">is_partial_supported</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Report whether the <a href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\"><code>Stream</code></a> is can ever be incomplete</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partial\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#1542-1544\">source</a><a href=\"#method.is_partial\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.StreamIsPartial.html#method.is_partial\" class=\"fn\">is_partial</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Report whether the <a href=\"winnow/stream/trait.Stream.html\" title=\"trait winnow::stream::Stream\"><code>Stream</code></a> is currently incomplete</div></details></div></details>","StreamIsPartial","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26OsStr%3E-for-%26str\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.72.0\">1.72.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1314\">source</a></span><a href=\"#impl-TryFrom%3C%26OsStr%3E-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ffi/os_str.rs.html#1326\">source</a><a href=\"#method.try_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: &amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to convert an <code>&amp;OsStr</code> to a <code>&amp;str</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::ffi::OsStr;\n\n<span class=\"kw\">let </span>os_str = OsStr::new(<span class=\"string\">\"foo\"</span>);\n<span class=\"kw\">let </span>as_str = &lt;<span class=\"kw-2\">&amp;</span>str&gt;::try_from(os_str).unwrap();\n<span class=\"macro\">assert_eq!</span>(as_str, <span class=\"string\">\"foo\"</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/error/struct.Utf8Error.html\" title=\"struct core::str::error::Utf8Error\">Utf8Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<&'a OsStr>","winnow::stream::Str"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpdateSlice-for-%26str\" class=\"impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2786-2791\">source</a><a href=\"#impl-UpdateSlice-for-%26str\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"winnow/stream/trait.UpdateSlice.html\" title=\"trait winnow::stream::UpdateSlice\">UpdateSlice</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/winnow/stream/mod.rs.html#2788-2790\">source</a><a href=\"#method.update_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"winnow/stream/trait.UpdateSlice.html#tymethod.update_slice\" class=\"fn\">update_slice</a>(self, inner: Self::<a class=\"associatedtype\" href=\"winnow/stream/trait.Stream.html#associatedtype.Slice\" title=\"type winnow::stream::Stream::Slice\">Slice</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert an <code>Output</code> type to be used as <code>Stream</code></div></details></div></details>","UpdateSlice","winnow::stream::Str"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()