searchState.loadedDescShard("r2d2", 0, "A generic connection pool.\nA builder for a connection pool.\nThe connection type this manager deals with.\nA trait which allows for customization of connections.\nThe error type returned by methods in this crate.\nThe error type returned by <code>Connection</code>s.\nA “type map” used to associate data with pooled …\nA trait which handles errors reported by the …\nA <code>HandleError</code> implementation which logs at the error level.\nA trait which provides connection-specific functionality.\nA <code>CustomizeConnection</code> which does nothing.\nA <code>HandleError</code> implementation which does nothing.\nA generic connection pool.\nA smart pointer wrapping a connection.\nInformation about the state of a <code>Pool</code>.\nConsumes the builder, returning a new, initialized pool.\nConsumes the builder, returning a new pool.\nReturns a builder type to configure a new pool.\nRemoves all values from the map.\nAttempts to create a new connection.\nSets the connection customizer used by the pool.\nSets the connection timeout used by the pool.\nReturns the configured connection timeout.\nThe number of connections currently being managed by the …\nSets the handler for errors reported in the pool.\nEvent subscriptions.\nSets the handler for events reported by the pool.\nReturns a shared reference to the extensions associated …\nReturns a mutable reference to the extensions associated …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves a connection from the pool.\nReturns a shared reference to the stored value of the …\nReturns a mutable reference to the stored value of the …\nRetrieves a connection from the pool, waiting for at most …\nHandles an error.\n<em>Quickly</em> determines if the connection is no longer usable.\nThe number of idle connections.\nSets the idle timeout used by the pool.\nReturns the configured idle connection timeout.\nInserts a new value into the map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines if the connection is still connected to the …\nSets the maximum lifetime of connections in the pool.\nReturns the configured maximum connection lifetime.\nSets the maximum number of connections managed by the pool.\nReturns the configured maximum pool size.\nSets the minimum idle connection count maintained by the …\nReturns the configured mimimum idle connection count.\nConstructs a new <code>Builder</code>.\nCreates a new connection pool with a default configuration.\nReturns a new, empty <code>Extensions</code>.\nCalled with connections immediately after they are …\nCalled with connections when they are removed from the …\nRemoves the value of the specified type from the map, …\nReturns information about the current state of the pool.\nIf true, the health of a connection will be verified via a …\nReturns if the pool is configured to test connections on …\nSets the thread pool used for asynchronous operations such …\nAttempts to retrieve a connection from the pool if there …\nInformation about an acquire event.\nInformation about a checkin event.\nInformation about a checkout event.\nA trait which is provided with information about events in …\nA <code>HandleEvent</code> implementation which does nothing.\nInformation about a release event.\nInformation about a timeout event.\nReturns the age of the connection.\nReturns the ID of the connection.\nReturns the ID of the connection.\nReturns the ID of the connection.\nReturns the ID of the connection.\nReturns the time taken to check out the connection.\nReturns the amount of time the connection was checked out.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalled when a new connection is acquired.\nCalled when a connection is checked back into the pool.\nCalled when a connection is checked out from the pool.\nCalled when a connection is released.\nCalled when a checkout attempt times out.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the timeout of the failed checkout attempt.")