searchState.loadedDescShard("mysqlclient_sys", 0, "Connection level of the KILL command\nQuery level of the KILL command\n@file include/my_list.h\nProvides plugin access to communication channel\nStruct for information about a replication stream.\nStores year, month and day components.\nStores all date and time components. Value is in UTC for …\nA temporary type for <code>DATETIME</code> or <code>TIMESTAMP</code> types equipped …\nStores hour, minute, second and microsecond.\n&lt; Currently just a placeholder\n&lt; Internal to MySQL. Not used in protocol\n&lt; Internal to MySQL. Not used in protocol\n&lt; Internal to MySQL. Not used in protocol\n&lt; Used for replication only\nThe server will send all metadata.\nNo metadata will be sent.\n&lt; See also: session_track_gtids\n&lt; Current schema\n&lt; track session state changes\n&lt; Session system variables\n&lt; Transaction chistics\n&lt; Transaction state\nFlush InnoDB buffers and other storage engines’ buffers\nWait for existing connections to finish\nDon’t flush InnoDB buffers, flush other storage engines…\nWait for existing transactons to finish\nWait for existing updates to finish (=&gt; no partial MyISAM …\n&lt; Compression algorithm name.\nThe local address to bind when connecting to remote server.\nSet if we are doing several queries in one command ( as in …\nSize of the packet returned by\nPointer to compressor context.\nCompression level to use in zlib compression.\nCompression level to use in zstd compression.\nPointer to decompressor context.\nColumn types for MySQL\noptions for ::mysql_options()\n@file include/mysql_time.h Time declarations shared …\n@}\nType of state change information that the server can …\nExtension pointer, for the caller private use. Any program …\nLength of the ‘file_name’ or 0\nServer ID to use when identifying\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSize of gtid set data\nFills in a MYSQL_PLUGIN_VIO_INFO structure, providing the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClient library error message buffer. Actually belongs to …\nSet if we are doing several queries in one command ( as in …\nfinds an already loaded plugin by name, or loads it, if …\nadds a plugin structure to the list of loaded plugins\nCompression context information. It encapsulate the …\nDeinitialize the compression context allocated.\nInitialize a compress context object to be associated with …\nGet default compression level corresponding to a given …\nWe want levels to be in growing order of hardness (because …\nloads a plugin and initializes it\nloads a plugin and initializes it, taking va_list as an …\nget plugin options\nset plugin options\nCompress context information. relating to zlib compression.\nCompress context information relating to zstd compression.\nPlugin provides a pointer reference and this function sets …\nNon blocking version of read_packet. This function points …\nSet if we are doing several queries in one command ( as in …\n&lt; microseconds\nPosition in the binary log to\nGTID set data or an argument for\n&lt; it’s set, if the protocol is SOCKET or TCP\nClient library sqlstate buffer. Set along with the error …\n@todo remove the “extension”, move st_mysql_options …\nFilename of the binary log to read\nThe time zone displacement, specified in seconds.\nSet if we are doing several queries in one command ( as in …\nPlugin provides a buffer with data and the length and this …\nNon blocking version of write_packet. Sends data available …\n&lt; Context information of zlib.\n&lt; Context information of zstd.")