searchState.loadedDescShard("writeable", 0, "<code>writeable</code> is a utility crate of the <code>ICU4X</code> project.\nA part that should annotate error segments in <code>TryWriteable</code> …\nA hint to help consumers of <code>Writeable</code> pre-allocate bytes …\n<code>Part</code>s are used as annotations for formatted strings.\nA sink that supports annotating parts of the string with …\nA writeable object that can fail while writing.\n<code>Writeable</code> is an alternative to <code>std::fmt::Display</code> with the …\nHelper types for trait impls.\nTesting macros for types implementing <code>TryWriteable</code>.\nSee <code>assert_try_writeable_eq</code>.\nTesting macros for types implementing <code>Writeable</code>.\nSee <code>assert_writeable_eq</code>.\n<code>write_to</code> will use at least n bytes.\n<code>write_to</code> will use at most n bytes.\n<code>write_to</code> will use between <code>n</code> and <code>m</code> bytes.\nReturns a new hint that is correct wherever <code>self</code> is …\nReturns a recommendation for the number of bytes to …\nCompares the contents of a <code>Writeable</code> to the given bytes …\nCompares the contents of a <code>Writeable</code> to the given UTF-8 …\n<code>write_to</code> will use exactly n bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nImplements <code>Display</code> for types that implement <code>Writeable</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>LengthHint</code> indicates that the string …\nWrites the contents of a <code>Writeable</code> to a string, returning …\nWrites the content of this writeable to a sink.\nWrites the content of this writeable to a sink.\nWrites the content of this writeable to a sink with parts …\nWrites the content of this writeable to a string.\nWrites the content of this writeable to a string.\nAnnotates all strings written by the closure with the …\nWrites a string to the given sink. Errors from the sink …\nWrite bytes and <code>Part</code> annotations to the given sink. Errors …\nCreates a new <code>String</code> with the data from this <code>Writeable</code>. …\nReturns a hint for the number of UTF-8 bytes that will be …\nReturns a hint for the number of UTF-8 bytes that will be …\nReturns a hint for the number of UTF-8 bytes that will be …\nA wrapper around a type implementing <code>fmt::Write</code> that …\nA wrapper around <code>TryWriteable</code> that implements <code>Writeable</code> if …\nA <code>Writeable</code> that writes out the given part.\nA wrapper around <code>Writeable</code> that implements <code>TryWriteable</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")