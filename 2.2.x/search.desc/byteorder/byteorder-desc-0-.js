searchState.loadedDescShard("byteorder", 0, "This crate provides convenience methods for encoding and …\nA type alias for <code>BigEndian</code>.\nDefines big-endian serialization.\n<code>ByteOrder</code> describes types that can serialize integers as …\nA type alias for <code>LittleEndian</code>.\nDefines little-endian serialization.\nDefines system native-endian serialization.\nDefines network byte order serialization.\nExtends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…\nExtends <code>Write</code> with methods for writing numbers. (For …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the given slice of IEEE754 single-precision (4 …\nConverts the given slice of IEEE754 double-precision (8 …\nConverts the given slice of signed 128 bit integers to a …\nConverts the given slice of signed 16 bit integers to a …\nConverts the given slice of signed 32 bit integers to a …\nConverts the given slice of signed 64 bit integers to a …\nConverts the given slice of unsigned 128 bit integers to a …\nConverts the given slice of unsigned 16 bit integers to a …\nConverts the given slice of unsigned 32 bit integers to a …\nConverts the given slice of unsigned 64 bit integers to a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads a IEEE754 single-precision (4 bytes) floating point …\nReads a IEEE754 single-precision (4 bytes) floating point …\nReads a IEEE754 single-precision (4 bytes) floating point …\nReads a sequence of IEEE754 single-precision (4 bytes) …\nReads a sequence of IEEE754 single-precision (4 bytes) …\nReads IEEE754 single-precision (4 bytes) floating point …\n<strong>DEPRECATED</strong>.\n<strong>DEPRECATED</strong>.\n<strong>DEPRECATED</strong>.\nReads a IEEE754 double-precision (8 bytes) floating point …\nReads a IEEE754 double-precision (8 bytes) floating point …\nReads a IEEE754 double-precision (8 bytes) floating point …\nReads a sequence of IEEE754 double-precision (8 bytes) …\nReads a sequence of IEEE754 double-precision (8 bytes) …\nReads IEEE754 single-precision (4 bytes) floating point …\n<strong>DEPRECATED</strong>.\n<strong>DEPRECATED</strong>.\n<strong>DEPRECATED</strong>.\nReads a signed 128 bit integer from the underlying reader.\nReads a signed 128 bit integer from the underlying reader.\nReads a signed 128 bit integer from <code>buf</code>.\nReads a sequence of signed 128 bit integers from the …\nReads a sequence of signed 128 bit integers from the …\nReads signed 128 bit integers from <code>src</code> into <code>dst</code>.\nReads a signed 16 bit integer from the underlying reader.\nReads a signed 16 bit integer from the underlying reader.\nReads a signed 16 bit integer from <code>buf</code>.\nReads a sequence of signed 16 bit integers from the …\nReads a sequence of signed 16 bit integers from the …\nReads signed 16 bit integers from <code>src</code> to <code>dst</code>.\nReads a signed 24 bit integer from the underlying reader.\nReads a signed 24 bit integer from the underlying reader.\nReads a signed 24 bit integer from <code>buf</code>, stored in i32.\nReads a signed 32 bit integer from the underlying reader.\nReads a signed 32 bit integer from the underlying reader.\nReads a signed 32 bit integer from <code>buf</code>.\nReads a sequence of signed 32 bit integers from the …\nReads a sequence of signed 32 bit integers from the …\nReads signed 32 bit integers from <code>src</code> into <code>dst</code>.\nReads a signed 48 bit integer from the underlying reader.\nReads a signed 48 bit integer from the underlying reader.\nReads a signed 48 bit integer from <code>buf</code>, stored in i64.\nReads a signed 64 bit integer from the underlying reader.\nReads a signed 64 bit integer from the underlying reader.\nReads a signed 64 bit integer from <code>buf</code>.\nReads a sequence of signed 64 bit integers from the …\nReads a sequence of signed 64 bit integers from the …\nReads signed 64 bit integers from <code>src</code> into <code>dst</code>.\nReads a signed 8 bit integer from the underlying reader.\nReads a signed 8 bit integer from the underlying reader.\nReads a sequence of signed 8 bit integers from the …\nReads a sequence of signed 8 bit integers from the …\nReads a signed n-bytes integer from the underlying reader.\nReads a signed n-bytes integer from the underlying reader.\nReads a signed n-bytes integer from <code>buf</code>.\nReads a signed n-bytes integer from the underlying reader.\nReads a signed n-bytes integer from the underlying reader.\nReads a signed n-bytes integer from <code>buf</code>.\nReads an unsigned 128 bit integer from <code>buf</code>.\nReads an unsigned 128 bit integer from the underlying …\nReads an unsigned 128 bit integer from the underlying …\nReads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.\nReads a sequence of unsigned 128 bit integers from the …\nReads a sequence of unsigned 128 bit integers from the …\nReads an unsigned 16 bit integer from <code>buf</code>.\nReads an unsigned 16 bit integer from the underlying …\nReads an unsigned 16 bit integer from the underlying …\nReads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.\nReads a sequence of unsigned 16 bit integers from the …\nReads a sequence of unsigned 16 bit integers from the …\nReads an unsigned 24 bit integer from the underlying …\nReads an unsigned 24 bit integer from the underlying …\nReads an unsigned 24 bit integer from <code>buf</code>, stored in u32.\nReads an unsigned 32 bit integer from <code>buf</code>.\nReads an unsigned 32 bit integer from the underlying …\nReads an unsigned 32 bit integer from the underlying …\nReads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.\nReads a sequence of unsigned 32 bit integers from the …\nReads a sequence of unsigned 32 bit integers from the …\nReads an unsigned 48 bit integer from the underlying …\nReads an unsigned 48 bit integer from the underlying …\nReads an unsigned 48 bit integer from <code>buf</code>, stored in u64.\nReads an unsigned 64 bit integer from <code>buf</code>.\nReads an unsigned 64 bit integer from the underlying …\nReads an unsigned 64 bit integer from the underlying …\nReads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.\nReads a sequence of unsigned 64 bit integers from the …\nReads a sequence of unsigned 64 bit integers from the …\nReads an unsigned 8 bit integer from the underlying reader.\nReads an unsigned 8 bit integer from the underlying reader.\nReads an unsigned n-bytes integer from <code>buf</code>.\nReads an unsigned n-bytes integer from the underlying …\nReads an unsigned n-bytes integer from the underlying …\nReads an unsigned n-bytes integer from <code>buf</code>.\nReads an unsigned n-bytes integer from the underlying …\nReads an unsigned n-bytes integer from the underlying …\nWrites a IEEE754 single-precision (4 bytes) floating point …\nWrites a IEEE754 single-precision (4 bytes) floating point …\nWrites a IEEE754 single-precision (4 bytes) floating point …\nWrites IEEE754 single-precision (4 bytes) floating point …\nWrites a IEEE754 double-precision (8 bytes) floating point …\nWrites a IEEE754 double-precision (8 bytes) floating point …\nWrites a IEEE754 double-precision (8 bytes) floating point …\nWrites IEEE754 double-precision (8 bytes) floating point …\nWrites a signed 128 bit integer to the underlying writer.\nWrites a signed 128 bit integer to the underlying writer.\nWrites a signed 128 bit integer <code>n</code> to <code>buf</code>.\nWrites signed 128 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed 16 bit integer to the underlying writer.\nWrites a signed 16 bit integer to the underlying writer.\nWrites a signed 16 bit integer <code>n</code> to <code>buf</code>.\nWrites signed 16 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed 24 bit integer to the underlying writer.\nWrites a signed 24 bit integer to the underlying writer.\nWrites a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.\nWrites a signed 32 bit integer to the underlying writer.\nWrites a signed 32 bit integer to the underlying writer.\nWrites a signed 32 bit integer <code>n</code> to <code>buf</code>.\nWrites signed 32 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed 48 bit integer to the underlying writer.\nWrites a signed 48 bit integer to the underlying writer.\nWrites a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.\nWrites a signed 64 bit integer to the underlying writer.\nWrites a signed 64 bit integer to the underlying writer.\nWrites a signed 64 bit integer <code>n</code> to <code>buf</code>.\nWrites signed 64 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed 8 bit integer to the underlying writer.\nWrites a signed 8 bit integer to the underlying writer.\nWrites signed 8 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed n-bytes integer to the underlying writer.\nWrites a signed n-bytes integer to the underlying writer.\nWrites a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.\nWrites a signed n-bytes integer to the underlying writer.\nWrites a signed n-bytes integer to the underlying writer.\nWrites a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.\nWrites an unsigned 128 bit integer <code>n</code> to <code>buf</code>.\nWrites an unsigned 128 bit integer to the underlying …\nWrites an unsigned 128 bit integer to the underlying …\nWrites unsigned 128 bit integers from <code>src</code> into <code>dst</code>.\nWrites an unsigned 16 bit integer <code>n</code> to <code>buf</code>.\nWrites an unsigned 16 bit integer to the underlying writer.\nWrites an unsigned 16 bit integer to the underlying writer.\nWrites unsigned 16 bit integers from <code>src</code> into <code>dst</code>.\nWrites an unsigned 24 bit integer to the underlying writer.\nWrites an unsigned 24 bit integer to the underlying writer.\nWrites an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.\nWrites an unsigned 32 bit integer <code>n</code> to <code>buf</code>.\nWrites an unsigned 32 bit integer to the underlying writer.\nWrites an unsigned 32 bit integer to the underlying writer.\nWrites unsigned 32 bit integers from <code>src</code> into <code>dst</code>.\nWrites an unsigned 48 bit integer to the underlying writer.\nWrites an unsigned 48 bit integer to the underlying writer.\nWrites an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.\nWrites an unsigned 64 bit integer <code>n</code> to <code>buf</code>.\nWrites an unsigned 64 bit integer to the underlying writer.\nWrites an unsigned 64 bit integer to the underlying writer.\nWrites unsigned 64 bit integers from <code>src</code> into <code>dst</code>.\nWrites an unsigned 8 bit integer to the underlying writer.\nWrites an unsigned 8 bit integer to the underlying writer.\nWrites an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.\nWrites an unsigned n-bytes integer to the underlying …\nWrites an unsigned n-bytes integer to the underlying …\nWrites an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.\nWrites an unsigned n-bytes integer to the underlying …\nWrites an unsigned n-bytes integer to the underlying …")