searchState.loadedDescShard("icu_normalizer", 0, "Normalizing text into Unicode Normalization Forms.\nA normalizer for performing composing normalization.\nBorrowed version of a normalizer for performing composing â€¦\nAn iterator adaptor that turns an <code>Iterator</code> over <code>char</code> into â€¦\nA normalizer for performing decomposing normalization.\nBorrowed version of a normalizer for performing â€¦\nAn iterator adaptor that turns an <code>Iterator</code> over <code>char</code> into â€¦\nConstructs a borrowed version of this type for more â€¦\nConstructs a borrowed version of this type for more â€¦\nPerforms canonical composition (including Hangul) on a â€¦\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether a string slice is normalized.\nCheck whether a string slice is normalized.\nNFC constructor using compiled data.\nNFC constructor using compiled data.\nNFD constructor using compiled data.\nNFD constructor using compiled data.\nNFKC constructor using compiled data.\nNFKC constructor using compiled data.\nNFKD constructor using compiled data.\nNFKD constructor using compiled data.\nNormalize a string slice into a <code>Cow&lt;&#39;a, str&gt;</code>.\nNormalize a string slice into a <code>Cow&lt;&#39;a, str&gt;</code>.\nWraps a delegate iterator into a decomposing iterator â€¦\nWraps a delegate iterator into a composing iterator â€¦\nNormalize a string slice into a <code>Write</code> sink.\nNormalize a string slice into a <code>Write</code> sink.\nAccess to the Unicode properties or property-based â€¦\nðŸš§ [Unstable] Data provider struct definitions for this â€¦\nSplit a string slice into maximum normalized prefix and â€¦\nSplit a string slice into maximum normalized prefix and â€¦\nCheaply converts a [<code>DecomposingNormalizerBorrowed&lt;&#39;static&gt;</code>]â€¦\nCheaply converts a [<code>ComposingNormalizerBorrowed&lt;&#39;static&gt;</code>] â€¦\nA version of <code>Self::new_nfc</code> that uses custom data provided â€¦\nA version of <code>Self::new_nfd</code> that uses custom data provided â€¦\nA version of <code>Self::new_nfkc</code> that uses custom data provided â€¦\nA version of <code>Self::new_nfkd</code> that uses custom data provided â€¦\nBundles the part of UTS 46 that makes sense to implement â€¦\nLookup of the Canonical_Combining_Class Unicode property.\nBorrowed version of lookup of the â€¦\nThe raw canonical composition operation.\nBorrowed version of the raw canonical composition â€¦\nThe raw (non-recursive) canonical decomposition operation.\nBorrowed version of the raw (non-recursive) canonical â€¦\nThe outcome of non-recursive canonical decomposition of a â€¦\nThe character is its own canonical decomposition.\nThe character decomposes to two characters.\nThe character decomposes to a single different character.\nConstructs a borrowed version of this type for more â€¦\nConstructs a borrowed version of this type for more â€¦\nConstructs a borrowed version of this type for more â€¦\nPerforms canonical composition (including Hangul) on a â€¦\nPerforms non-recursive canonical decomposition (including â€¦\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLook up the canonical combining class for a scalar value â€¦\nLook up the canonical combining class for a scalar value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new <code>CanonicalComposition</code> using compiled data.\nConstructs a new <code>CanonicalCompositionBorrowed</code> using â€¦\nConstruct from compiled data.\nConstruct from compiled data.\nConstruct from compiled data.\nConstruct from compiled data.\nCheaply converts a [<code>CanonicalCompositionBorrowed&lt;&#39;static&gt;</code>] â€¦\nCheaply converts a [<code>CanonicalDecompositionBorrowed&lt;&#39;static&gt;</code>â€¦\nCheaply converts a [â€¦\nA version of <code>Self::new</code> that uses custom data provided by a â€¦\nA version of <code>Self::new</code> that uses custom data provided by a â€¦\nA version of <code>Self::new</code> that uses custom data provided by a â€¦\nBaked data\nNon-Hangul canonical compositions\nDecomposition data\nThe expansion tables for cases where the decomposition isnâ€¦\nNon-recursive canonical decompositions that differ from â€¦\nMarker for data for composition.\nMarker for data for canonical decomposition.\nMarker for additional data for non-recusrsive composition.\nMarker for additional data for canonical decomposition.\nMarker for data for compatibility decomposition.\nMarker for additional data for compatibility decomposition.\nMarker for data for UTS-46 decomposition.\nTrie keys are two-<code>char</code> strings with the second character â€¦\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe passthrough bounds of NFD/NFC are lowered to this â€¦\nDecompositions that are fully within the BMP\nDecompositions with at least one character outside the BMP\nDecompositions with at least one character outside the BMP\nTrie for decomposition.\nTrie for the supplementary non-recursive decompositions\nA mapper that knows how to performs the subsets of UTS 46 â€¦\nA borrowed version of a mapper that knows how to performs â€¦\nConstructs a borrowed version of this type for more â€¦\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator adaptor that turns an <code>Iterator</code> over â€¦\nConstruct with compiled data.\nConstruct with compiled data.\nReturns an iterator adaptor that turns an <code>Iterator</code> over â€¦\nCheaply converts a [<code>Uts46MapperBorrowed&lt;&#39;static&gt;</code>] into a â€¦\nConstruct with provider. A version of <code>Self::new</code> that uses â€¦")