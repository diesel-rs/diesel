searchState.loadedDescShard("scheduled_thread_pool", 0, "A thread pool to execute scheduled actions in parallel.\nAny pending scheduled executions will be run, but periodic …\nDon’t run any pending scheduled executions.\nA handle to a scheduled job.\nOptions for what the behavior should be in regards to …\nA pool of threads which can run tasks at specific time …\nStaged builder types.\nReturns a builder type to configure a new pool.\nCancels the job.\nExecutes a closure as soon as possible in the pool.\nExecutes a closure after a time delay in the pool.\nExecutes a closure after an initial delay at a dynamic …\nExecutes a closure after an initial delay at a fixed rate …\nExecutes a closure after an initial delay at a dynamic …\nExecutes a closure after an initial delay at a fixed rate …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new thread pool with the specified number of …\nCreates a new thread pool with the specified number of …\nThe final builder stage, allowing configuration of …\nThe builder stage expecting the <code>num_threads</code> value.\nConsumes the builder, returning the constructed thread …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpecifies the number of threads the pool should use.\nSets the behavior for what to do with pending scheduled …\nSets the pattern to be used when naming threads created to …")