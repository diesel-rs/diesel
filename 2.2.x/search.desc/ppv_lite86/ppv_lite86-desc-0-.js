searchState.loadedDescShard("ppv_lite86", 0, "Ops that depend on word size\nOps that are independent of word size and endian\nA vector composed one or more lanes each composed of four …\nA vector composed of multiple 128-bit lanes.\nExchange neigboring ranges of bits of the specified size\nCombine single vectors into a multi-lane vector.\nA vector composed of two elements, which may be words or …\nA vector composed of four elements, which may be words or …\nVec4 functions which may not be implemented yet for all …\nA vector composed of four words; depending on their size, …\nGenerate the full set of optimized implementations to take …\nGenerate only the basic implementations necessary to be …\nGenerate only the basic implementations necessary to be …\nBuild a multi-lane vector from individual lanes.\nSafety\nSplit a multi-lane vector into single-lane vectors.\nSafety\nSafety\nSafety\nAVX but not AVX2: only 128-bit integer operations, but use …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneric wrapper for unparameterized storage of any of the …")