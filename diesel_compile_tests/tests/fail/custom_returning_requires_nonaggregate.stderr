error[E0277]: mixing aggregate and not aggregate expressions is not allowed in SQL
   --> tests/fail/custom_returning_requires_nonaggregate.rs:24:20
    |
24  |         .returning(count(id));
    |          --------- ^^^^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::No>` is not implemented for `diesel::expression::is_aggregate::Yes`
    |          |
    |          required by a bound introduced by this call
    |
    = note: you tried to combine expressions that aggregate over a certain column with expressions that don't aggregate over that column
    = note: try to either use aggregate functions like `min`/`max`/… for this column or add the column to your `GROUP BY` clause
    = note: also there are clauses like `WHERE` or `RETURNING` that does not accept aggregate expressions at all
    = help: the following other types implement trait `MixedAggregates<Other>`:
              `diesel::expression::is_aggregate::Yes` implements `MixedAggregates<diesel::expression::is_aggregate::Never>`
              `diesel::expression::is_aggregate::Yes` implements `MixedAggregates<diesel::expression::is_aggregate::Yes>`
    = note: required for `UpdateStatement<table, WhereClause<Grouped<Eq<id, ...>>>, ..., ...>` to implement `Query`
note: required by a bound in `UpdateStatement::<T, U, V>::returning`
   --> DIESEL/diesel/diesel/src/query_builder/update_statement/mod.rs
    |
LL |     pub fn returning<E>(self, returns: E) -> UpdateStatement<T, U, V, ReturningClause<E>>
    |            --------- required by a bound in this associated function
...
LL |         UpdateStatement<T, U, V, ReturningClause<E>>: Query,
    |                                                       ^^^^^ required by this bound in `UpdateStatement::<T, U, V>::returning`
 
    
error[E0277]: mixing aggregate and not aggregate expressions is not allowed in SQL
   --> tests/fail/custom_returning_requires_nonaggregate.rs:32:20
    |
32  |         .returning((name, count(name)));
    |          --------- ^^^^^^^^^^^^^^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
    |          |
    |          required by a bound introduced by this call
    |
    = note: you tried to combine expressions that aggregate over a certain column with expressions that don't aggregate over that column
    = note: try to either use aggregate functions like `min`/`max`/… for this column or add the column to your `GROUP BY` clause
    = note: also there are clauses like `WHERE` or `RETURNING` that does not accept aggregate expressions at all
    = help: the following other types implement trait `MixedAggregates<Other>`:
              `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::Never>`
              `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::No>`
    = note: required for `(name, count<Text, name>)` to implement `ValidGrouping<()>`
    = note: required for `(name, count<Text, name>)` to implement `NonAggregate`
    = note: required for `InsertStatement<table, ValuesClause<(...,), ...>, ..., ...>` to implement `Query`
note: required by a bound in `InsertStatement::<T, U, Op>::returning`
   --> DIESEL/diesel/diesel/src/query_builder/insert_statement/mod.rs
    |
LL |     pub fn returning<E>(self, returns: E) -> InsertStatement<T, U, Op, ReturningClause<E>>
    |            --------- required by a bound in this associated function
LL |     where
LL |         InsertStatement<T, U, Op, ReturningClause<E>>: Query,
    |                                                        ^^^^^ required by this bound in `InsertStatement::<T, U, Op>::returning`
 
    For more information about this error, try `rustc --explain E0277`.
