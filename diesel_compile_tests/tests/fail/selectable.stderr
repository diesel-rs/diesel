error[E0433]: failed to resolve: use of undeclared crate or module `post`
  --> $DIR/selectable.rs:58:16
   |
58 | #[table_name = "post"]
   |                ^^^^^^ use of undeclared crate or module `post`

error[E0412]: cannot find type `titel` in module `posts`
  --> $DIR/selectable.rs:53:5
   |
53 |     titel: String
   |     ^^^^^ not found in `posts`

error[E0425]: cannot find value `titel` in module `posts`
  --> $DIR/selectable.rs:53:5
   |
53 |     titel: String
   |     ^^^^^ not found in `posts`

error[E0271]: type mismatch resolving `<posts::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Never`
   --> $DIR/selectable.rs:149:10
    |
149 |         .select(UserWithEmbeddedPost::as_select())
    |          ^^^^^^ expected struct `diesel::query_source::Once`, found struct `diesel::query_source::Never`
    |
    = note: required because of the requirements on the impl of `SelectableExpression<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>>` for `posts::columns::id`
    = note: 4 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `SelectDsl<SelectBy<UserWithEmbeddedPost, _>>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:149:10
    |
149 |         .select(UserWithEmbeddedPost::as_select())
    |          ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::id as SelectableExpression<SelectStatement<From>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::id as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>>` for `posts::columns::id`
    = note: 4 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `SelectDsl<SelectBy<UserWithEmbeddedPost, _>>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>`

error[E0277]: the trait bound `posts::columns::title: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:149:10
    |
149 |         .select(UserWithEmbeddedPost::as_select())
    |          ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = help: the following implementations were found:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<SelectStatement<From>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::title as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>>` for `posts::columns::title`
    = note: 4 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `SelectDsl<SelectBy<UserWithEmbeddedPost, _>>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>`

error[E0271]: type mismatch resolving `<posts::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Never`
   --> $DIR/selectable.rs:150:10
    |
150 |         .load(&mut conn)
    |          ^^^^ expected struct `diesel::query_source::Once`, found struct `diesel::query_source::Never`
    |
    = note: required because of the requirements on the impl of `SelectableExpression<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>>` for `posts::columns::id`
    = note: 4 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `SelectClauseExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:150:10
    |
150 |         .load(&mut conn)
    |          ^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::id as SelectableExpression<SelectStatement<From>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::id as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>>` for `posts::columns::id`
    = note: 4 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `SelectClauseExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::title: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:150:10
    |
150 |         .load(&mut conn)
    |          ^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = help: the following implementations were found:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<SelectStatement<From>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::title as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>>` for `posts::columns::title`
    = note: 4 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `SelectClauseExpression<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>` for `diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, LeftOuter>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::id: IsContainedInGroupBy<users::columns::id>` is not satisfied
   --> $DIR/selectable.rs:157:10
    |
157 |         .select(UserWithEmbeddedPost::as_select())
    |          ^^^^^^ the trait `IsContainedInGroupBy<users::columns::id>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as IsContainedInGroupBy<posts::columns::id>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::title>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::user_id>>
    = note: required because of the requirements on the impl of `ValidGrouping<posts::columns::id>` for `users::columns::id`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<posts::columns::id>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `SelectDsl<SelectBy<UserWithEmbeddedPost, _>>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::DefaultSelectClause, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<posts::columns::id>>`

error[E0277]: the trait bound `posts::columns::id: IsContainedInGroupBy<users::columns::name>` is not satisfied
   --> $DIR/selectable.rs:157:10
    |
157 |         .select(UserWithEmbeddedPost::as_select())
    |          ^^^^^^ the trait `IsContainedInGroupBy<users::columns::name>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as IsContainedInGroupBy<posts::columns::id>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::title>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::user_id>>
    = note: required because of the requirements on the impl of `ValidGrouping<posts::columns::id>` for `users::columns::name`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<posts::columns::id>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `SelectDsl<SelectBy<UserWithEmbeddedPost, _>>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::DefaultSelectClause, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<posts::columns::id>>`

error[E0277]: the trait bound `posts::columns::id: IsContainedInGroupBy<users::columns::id>` is not satisfied
   --> $DIR/selectable.rs:158:10
    |
158 |         .load(&mut conn)
    |          ^^^^ the trait `IsContainedInGroupBy<users::columns::id>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as IsContainedInGroupBy<posts::columns::id>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::title>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::user_id>>
    = note: required because of the requirements on the impl of `ValidGrouping<posts::columns::id>` for `users::columns::id`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<posts::columns::id>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<posts::columns::id>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<posts::columns::id>>`

error[E0277]: the trait bound `posts::columns::id: IsContainedInGroupBy<users::columns::name>` is not satisfied
   --> $DIR/selectable.rs:158:10
    |
158 |         .load(&mut conn)
    |          ^^^^ the trait `IsContainedInGroupBy<users::columns::name>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as IsContainedInGroupBy<posts::columns::id>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::title>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::user_id>>
    = note: required because of the requirements on the impl of `ValidGrouping<posts::columns::id>` for `users::columns::name`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<posts::columns::id>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<posts::columns::id>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithEmbeddedPost, _>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<posts::columns::id>>`

error[E0277]: the trait bound `diesel::expression::is_aggregate::No: MixedAggregates<diesel::expression::is_aggregate::Yes>` is not satisfied
   --> $DIR/selectable.rs:164:10
    |
164 |         .select(UserWithPostCount::as_select())
    |          ^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
    |
    = help: the following implementations were found:
              <diesel::expression::is_aggregate::No as MixedAggregates<diesel::expression::is_aggregate::Never>>
              <diesel::expression::is_aggregate::No as MixedAggregates<diesel::expression::is_aggregate::No>>
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `(users::columns::id, users::columns::name, count::count::count<diesel::sql_types::Integer, posts::columns::id>)`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `SelectBy<UserWithPostCount, Pg>`
    = note: required because of the requirements on the impl of `SelectDsl<SelectBy<UserWithPostCount, Pg>>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>>`

error[E0277]: the trait bound `diesel::expression::is_aggregate::No: MixedAggregates<diesel::expression::is_aggregate::Yes>` is not satisfied
   --> $DIR/selectable.rs:165:10
    |
165 |         .load(&mut conn)
    |          ^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
    |
    = help: the following implementations were found:
              <diesel::expression::is_aggregate::No as MixedAggregates<diesel::expression::is_aggregate::Never>>
              <diesel::expression::is_aggregate::No as MixedAggregates<diesel::expression::is_aggregate::No>>
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `(users::columns::id, users::columns::name, count::count::count<diesel::sql_types::Integer, posts::columns::id>)`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `SelectBy<UserWithPostCount, Pg>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithPostCount, Pg>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithPostCount>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithPostCount, Pg>>>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:172:10
    |
172 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::id as SelectableExpression<SelectStatement<From>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::id as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::title: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:172:10
    |
172 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = help: the following implementations were found:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<SelectStatement<From>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::title as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
   --> $DIR/selectable.rs:172:10
    |
172 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
    |
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:173:10
    |
173 |         .load(&mut conn)
    |          ^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::id as SelectableExpression<SelectStatement<From>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::id as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::title: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:173:10
    |
173 |         .load(&mut conn)
    |          ^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = help: the following implementations were found:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<SelectStatement<From>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::title as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
   --> $DIR/selectable.rs:173:10
    |
173 |         .load(&mut conn)
    |          ^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
    |
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `InsertStatement<users::table, ValuesClause<ColumnInsertValue<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, users::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:180:10
    |
180 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::id as SelectableExpression<SelectStatement<From>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::id as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::title: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:180:10
    |
180 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = help: the following implementations were found:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<SelectStatement<From>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::title as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
   --> $DIR/selectable.rs:180:10
    |
180 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
    |
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:181:10
    |
181 |         .load(&mut conn)
    |          ^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::id as SelectableExpression<SelectStatement<From>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::id as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::title: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:181:10
    |
181 |         .load(&mut conn)
    |          ^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = help: the following implementations were found:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<SelectStatement<From>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::title as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
   --> $DIR/selectable.rs:181:10
    |
181 |         .load(&mut conn)
    |          ^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
    |
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `UpdateStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::update_statement::changeset::Assign<users::columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:187:10
    |
187 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::id as SelectableExpression<SelectStatement<From>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::id as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`

error[E0277]: the trait bound `posts::columns::title: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:187:10
    |
187 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = help: the following implementations were found:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<SelectStatement<From>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::title as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
   --> $DIR/selectable.rs:187:10
    |
187 |         .returning(UserWithEmbeddedPost::as_select())
    |          ^^^^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
    |
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`

error[E0277]: the trait bound `posts::columns::id: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:188:10
    |
188 |         .load(&mut conn)
    |          ^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`
    |
    = help: the following implementations were found:
              <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::id as SelectableExpression<SelectStatement<From>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::id as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::id as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `DeleteStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `DeleteStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0277]: the trait bound `posts::columns::title: SelectableExpression<users::table>` is not satisfied
   --> $DIR/selectable.rs:188:10
    |
188 |         .load(&mut conn)
    |          ^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = help: the following implementations were found:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<SelectStatement<From>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<diesel::query_source::joins::Join<Left, Right, LeftOuter>>>
              <posts::columns::title as SelectableExpression<posts::table>>
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `DeleteStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `DeleteStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0271]: type mismatch resolving `<users::table as AppearsInFromClause<posts::table>>::Count == diesel::query_source::Once`
   --> $DIR/selectable.rs:188:10
    |
188 |         .load(&mut conn)
    |          ^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
    |
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `posts::columns::id`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `AppearsOnTable<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `(posts::columns::id, posts::columns::title)`
    = note: 2 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<users::table>` for `SelectBy<UserWithEmbeddedPost, _>`
    = note: required because of the requirements on the impl of `Query` for `DeleteStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`
    = note: required because of the requirements on the impl of `LoadQuery<_, UserWithEmbeddedPost>` for `DeleteStatement<users::table, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::returning_clause::ReturningClause<SelectBy<UserWithEmbeddedPost, _>>>`

error[E0599]: the function or associated item `as_select` exists for struct `UserWithoutSelectable`, but its trait bounds were not satisfied
   --> $DIR/selectable.rs:192:56
    |
80  | struct UserWithoutSelectable {
    | ----------------------------
    | |
    | function or associated item `as_select` not found for this
    | doesn't satisfy `UserWithoutSelectable: diesel::Selectable<_>`
    | doesn't satisfy `UserWithoutSelectable: diesel::SelectableHelper<_>`
...
192 |     let _ = users::table.select(UserWithoutSelectable::as_select()).load(&mut conn).unwrap();
    |                                                        ^^^^^^^^^ function or associated item cannot be called on `UserWithoutSelectable` due to unsatisfied trait bounds
    |
    = note: the following trait bounds were not satisfied:
            `UserWithoutSelectable: diesel::Selectable<_>`
            which is required by `UserWithoutSelectable: diesel::SelectableHelper<_>`
            `&UserWithoutSelectable: diesel::Selectable<_>`
            which is required by `&UserWithoutSelectable: diesel::SelectableHelper<_>`
            `&mut UserWithoutSelectable: diesel::Selectable<_>`
            which is required by `&mut UserWithoutSelectable: diesel::SelectableHelper<_>`

error[E0277]: the trait bound `SelectBy<Post, _>: SingleValue` is not satisfied
   --> $DIR/selectable.rs:195:52
    |
195 |     let _ = posts::table.select(Post::as_select()).load::<(i32, String)>(&mut conn).unwrap();
    |                                                    ^^^^ the trait `SingleValue` is not implemented for `SelectBy<Post, _>`
    |
    = note: required because of the requirements on the impl of `CompatibleType<(i32, std::string::String), _>` for `SelectBy<Post, _>`
    = note: required because of the requirements on the impl of `LoadQuery<_, (i32, std::string::String)>` for `SelectStatement<posts::table, diesel::query_builder::select_clause::SelectClause<SelectBy<Post, _>>>`

error[E0277]: the trait bound `(i32, std::string::String): diesel::Queryable<SelectBy<Post, _>, _>` is not satisfied
   --> $DIR/selectable.rs:195:52
    |
195 |     let _ = posts::table.select(Post::as_select()).load::<(i32, String)>(&mut conn).unwrap();
    |                                                    ^^^^ the trait `diesel::Queryable<SelectBy<Post, _>, _>` is not implemented for `(i32, std::string::String)`
    |
    = help: the following implementations were found:
              <(A, B) as diesel::Queryable<(SA, SB), __DB>>
              <(A, B) as diesel::Queryable<Record<(SA, SB)>, Pg>>
              <(std::collections::Bound<T>, std::collections::Bound<T>) as diesel::Queryable<diesel::sql_types::Range<ST>, Pg>>
    = note: required because of the requirements on the impl of `FromSqlRow<SelectBy<Post, _>, _>` for `(i32, std::string::String)`
    = note: required because of the requirements on the impl of `CompatibleType<(i32, std::string::String), _>` for `SelectBy<Post, _>`
    = note: required because of the requirements on the impl of `LoadQuery<_, (i32, std::string::String)>` for `SelectStatement<posts::table, diesel::query_builder::select_clause::SelectClause<SelectBy<Post, _>>>`

error[E0277]: the trait bound `SelectBy<Post, _>: SingleValue` is not satisfied
   --> $DIR/selectable.rs:196:65
    |
196 |     let _ = posts::table.select(Post::as_select()).into_boxed().load::<(i32, String)>(&mut conn).unwrap();
    |                                                                 ^^^^ the trait `SingleValue` is not implemented for `SelectBy<Post, _>`
    |
    = note: required because of the requirements on the impl of `CompatibleType<(i32, std::string::String), _>` for `SelectBy<Post, _>`
    = note: required because of the requirements on the impl of `LoadQuery<_, (i32, std::string::String)>` for `BoxedSelectStatement<'_, SelectBy<Post, _>, posts::table, _>`

error[E0277]: the trait bound `(i32, std::string::String): diesel::Queryable<SelectBy<Post, _>, _>` is not satisfied
   --> $DIR/selectable.rs:196:65
    |
196 |     let _ = posts::table.select(Post::as_select()).into_boxed().load::<(i32, String)>(&mut conn).unwrap();
    |                                                                 ^^^^ the trait `diesel::Queryable<SelectBy<Post, _>, _>` is not implemented for `(i32, std::string::String)`
    |
    = help: the following implementations were found:
              <(A, B) as diesel::Queryable<(SA, SB), __DB>>
              <(A, B) as diesel::Queryable<Record<(SA, SB)>, Pg>>
              <(std::collections::Bound<T>, std::collections::Bound<T>) as diesel::Queryable<diesel::sql_types::Range<ST>, Pg>>
    = note: required because of the requirements on the impl of `FromSqlRow<SelectBy<Post, _>, _>` for `(i32, std::string::String)`
    = note: required because of the requirements on the impl of `CompatibleType<(i32, std::string::String), _>` for `SelectBy<Post, _>`
    = note: required because of the requirements on the impl of `LoadQuery<_, (i32, std::string::String)>` for `BoxedSelectStatement<'_, SelectBy<Post, _>, posts::table, _>`

error[E0277]: the trait bound `(SelectBy<Post, _>, diesel::sql_types::Text): CompatibleType<((i32, std::string::String), std::string::String), _>` is not satisfied
   --> $DIR/selectable.rs:197:68
    |
197 |     let _ = posts::table.select((Post::as_select(), posts::title)).load::<((i32, String), String)>(&mut conn).unwrap();
    |                                                                    ^^^^ the trait `CompatibleType<((i32, std::string::String), std::string::String), _>` is not implemented for `(SelectBy<Post, _>, diesel::sql_types::Text)`
    |
    = help: the following implementations were found:
              <(SA, SB) as CompatibleType<__T, __DB>>
    = note: required because of the requirements on the impl of `LoadQuery<_, ((i32, std::string::String), std::string::String)>` for `SelectStatement<posts::table, diesel::query_builder::select_clause::SelectClause<(SelectBy<Post, _>, posts::columns::title)>>`

error[E0277]: the trait bound `SelectBy<Post, _>: SingleValue` is not satisfied
   --> $DIR/selectable.rs:201:10
    |
201 |         .load::<(i32, String, i32)>(&mut conn)
    |          ^^^^ the trait `SingleValue` is not implemented for `SelectBy<Post, _>`
    |
    = note: required because of the requirements on the impl of `CompatibleType<(i32, std::string::String, i32), _>` for `SelectBy<Post, _>`
    = note: required because of the requirements on the impl of `LoadQuery<_, (i32, std::string::String, i32)>` for `InsertStatement<posts::table, ValuesClause<ColumnInsertValue<posts::columns::title, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, posts::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<Post, _>>>`

error[E0277]: the trait bound `(i32, std::string::String, i32): diesel::Queryable<SelectBy<Post, _>, _>` is not satisfied
   --> $DIR/selectable.rs:201:10
    |
201 |         .load::<(i32, String, i32)>(&mut conn)
    |          ^^^^ the trait `diesel::Queryable<SelectBy<Post, _>, _>` is not implemented for `(i32, std::string::String, i32)`
    |
    = help: the following implementations were found:
              <(A, B, C) as diesel::Queryable<(SA, SB, SC), __DB>>
              <(A, B, C) as diesel::Queryable<Record<(SA, SB, SC)>, Pg>>
    = note: required because of the requirements on the impl of `FromSqlRow<SelectBy<Post, _>, _>` for `(i32, std::string::String, i32)`
    = note: required because of the requirements on the impl of `CompatibleType<(i32, std::string::String, i32), _>` for `SelectBy<Post, _>`
    = note: required because of the requirements on the impl of `LoadQuery<_, (i32, std::string::String, i32)>` for `InsertStatement<posts::table, ValuesClause<ColumnInsertValue<posts::columns::title, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>, posts::table>, diesel::query_builder::insert_statement::Insert, diesel::query_builder::returning_clause::ReturningClause<SelectBy<Post, _>>>`

error[E0271]: type mismatch resolving `<diesel::SqliteConnection as diesel::Connection>::Backend == Pg`
   --> $DIR/selectable.rs:210:10
    |
210 |         .load(&mut conn)
    |          ^^^^ expected struct `Sqlite`, found struct `Pg`
    |
    = note: required because of the requirements on the impl of `LoadQuery<diesel::SqliteConnection, UserWithPostCount>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithPostCount, Pg>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<users::columns::id>>`

error[E0277]: the trait bound `Sqlite: HasSqlType<SelectBy<UserWithPostCount, Pg>>` is not satisfied
   --> $DIR/selectable.rs:210:10
    |
210 |         .load(&mut conn)
    |          ^^^^ the trait `HasSqlType<SelectBy<UserWithPostCount, Pg>>` is not implemented for `Sqlite`
    |
    = help: the following implementations were found:
              <Sqlite as HasSqlType<BigInt>>
              <Sqlite as HasSqlType<Bool>>
              <Sqlite as HasSqlType<diesel::sql_types::Binary>>
              <Sqlite as HasSqlType<diesel::sql_types::Date>>
            and 8 others
    = note: required because of the requirements on the impl of `QueryMetadata<SelectBy<UserWithPostCount, Pg>>` for `Sqlite`
    = note: required because of the requirements on the impl of `LoadQuery<diesel::SqliteConnection, UserWithPostCount>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithPostCount, Pg>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<users::columns::id>>`

error[E0277]: the trait bound `SelectBy<UserWithPostCount, Pg>: SingleValue` is not satisfied
   --> $DIR/selectable.rs:210:10
    |
210 |         .load(&mut conn)
    |          ^^^^ the trait `SingleValue` is not implemented for `SelectBy<UserWithPostCount, Pg>`
    |
    = note: required because of the requirements on the impl of `QueryMetadata<SelectBy<UserWithPostCount, Pg>>` for `Sqlite`
    = note: required because of the requirements on the impl of `LoadQuery<diesel::SqliteConnection, UserWithPostCount>` for `SelectStatement<JoinOn<diesel::query_source::joins::Join<users::table, posts::table, Inner>, Grouped<diesel::expression::operators::Eq<diesel::expression::nullable::Nullable<posts::columns::user_id>, diesel::expression::nullable::Nullable<users::columns::id>>>>, diesel::query_builder::select_clause::SelectClause<SelectBy<UserWithPostCount, Pg>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<users::columns::id>>`
