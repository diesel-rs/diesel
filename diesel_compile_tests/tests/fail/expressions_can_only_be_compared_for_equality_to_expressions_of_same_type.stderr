error[E0277]: the trait bound `str: diesel::Expression` is not satisfied
  --> tests/fail/expressions_can_only_be_compared_for_equality_to_expressions_of_same_type.rs:15:19
   |
LL |     let pred = id.eq("string");
   |                   ^^ the trait `diesel::Expression` is not implemented for `str`
   |
   = help: the following other types implement trait `diesel::Expression`:
             &T
             AliasedField<S, C>
             Box<T>
             CaseWhen<diesel::expression::case_when::non_public_types::CaseWhenConditionsIntermediateNode<W, T, Whens>, E>
             CaseWhen<diesel::expression::case_when::non_public_types::CaseWhenConditionsLeaf<W, T>, diesel::expression::case_when::non_public_types::ElseExpression<E>>
             CaseWhen<diesel::expression::case_when::non_public_types::CaseWhenConditionsLeaf<W, T>, diesel::expression::case_when::non_public_types::NoElseExpression>
             CountDistinct<T, E>
             CountStar
           and N others
   = note: required for `&str` to implement `diesel::Expression`
   = note: required for `&str` to implement `AsExpression<diesel::sql_types::Integer>`

error[E0271]: type mismatch resolving `<name as Expression>::SqlType == Integer`
  --> tests/fail/expressions_can_only_be_compared_for_equality_to_expressions_of_same_type.rs:17:19
   |
LL |     let pred = id.eq(name);
   |                   ^^ type mismatch resolving `<name as Expression>::SqlType == Integer`
   |
note: expected this to be `diesel::sql_types::Integer`
  --> tests/fail/expressions_can_only_be_compared_for_equality_to_expressions_of_same_type.rs:8:17
   |
8  |         name -> VarChar,
   |                 ^^^^^^^
   = note: required for `columns::name` to implement `AsExpression<diesel::sql_types::Integer>`
