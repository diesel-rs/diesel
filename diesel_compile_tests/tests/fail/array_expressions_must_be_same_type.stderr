error[E0277]: the trait bound `f64: SelectableExpression<NoFromClause>` is not satisfied
   --> tests/fail/array_expressions_must_be_same_type.rs:11:5
    |
11  |     select(array((1, 3f64))).get_result::<Vec<i32>>(&mut connection).unwrap();
    |     ^^^^^^ the trait `SelectableExpression<NoFromClause>` is not implemented for `f64`
    |
   ::: $DIESEL/src/query_builder/functions.rs
    |
    |     crate::dsl::BareSelect<T>: AsQuery,
    |                                ------- required by this bound in `diesel::select`
    |
    = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64)`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>`
    = note: required because of the requirements on the impl of `SelectClauseExpression<NoFromClause>` for `diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`
    = note: required because of the requirements on the impl of `AsQuery` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: ValidGrouping<()>` is not satisfied
   --> tests/fail/array_expressions_must_be_same_type.rs:11:5
    |
11  |     select(array((1, 3f64))).get_result::<Vec<i32>>(&mut connection).unwrap();
    |     ^^^^^^ the trait `ValidGrouping<()>` is not implemented for `f64`
    |
   ::: $DIESEL/src/query_builder/functions.rs
    |
    |     crate::dsl::BareSelect<T>: AsQuery,
    |                                ------- required by this bound in `diesel::select`
    |
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64)`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`
    = note: required because of the requirements on the impl of `AsQuery` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: SelectableExpression<NoFromClause>` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:11:30
   |
11 |     select(array((1, 3f64))).get_result::<Vec<i32>>(&mut connection).unwrap();
   |                              ^^^^^^^^^^ the trait `SelectableExpression<NoFromClause>` is not implemented for `f64`
   |
   = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64)`
   = note: 1 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>`
   = note: required because of the requirements on the impl of `SelectClauseExpression<NoFromClause>` for `diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>`
   = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`
   = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<i32>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: ValidGrouping<()>` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:11:30
   |
11 |     select(array((1, 3f64))).get_result::<Vec<i32>>(&mut connection).unwrap();
   |                              ^^^^^^^^^^ the trait `ValidGrouping<()>` is not implemented for `f64`
   |
   = note: required because of the requirements on the impl of `ValidGrouping<()>` for `(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64)`
   = note: 1 redundant requirements hidden
   = note: required because of the requirements on the impl of `ValidGrouping<()>` for `diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>`
   = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`
   = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<i32>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: QueryFragment<Pg>` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:11:30
   |
11 |     select(array((1, 3f64))).get_result::<Vec<i32>>(&mut connection).unwrap();
   |                              ^^^^^^^^^^ the trait `QueryFragment<Pg>` is not implemented for `f64`
   |
   = note: required because of the requirements on the impl of `QueryFragment<Pg>` for `(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64)`
   = note: 3 redundant requirements hidden
   = note: required because of the requirements on the impl of `QueryFragment<Pg>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`
   = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<i32>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: QueryId` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:11:30
   |
11 |     select(array((1, 3f64))).get_result::<Vec<i32>>(&mut connection).unwrap();
   |                              ^^^^^^^^^^ the trait `QueryId` is not implemented for `f64`
   |
   = note: required because of the requirements on the impl of `QueryId` for `(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64)`
   = note: 3 redundant requirements hidden
   = note: required because of the requirements on the impl of `QueryId` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`
   = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<i32>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: diesel::Expression` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:11:12
   |
11 |     select(array((1, 3f64))).get_result::<Vec<i32>>(&mut connection).unwrap();
   |            ^^^^^ the trait `diesel::Expression` is not implemented for `f64`
   |
  ::: $DIESEL/src/pg/expression/array.rs
   |
   |     T: AsExpressionList<ST>,
   |        -------------------- required by this bound in `diesel::dsl::array`
   |
   = note: required because of the requirements on the impl of `AsExpression<diesel::sql_types::Integer>` for `f64`
   = note: required because of the requirements on the impl of `AsExpressionList<diesel::sql_types::Integer>` for `(i32, f64)`

error[E0277]: the trait bound `{integer}: SelectableExpression<NoFromClause>` is not satisfied
   --> tests/fail/array_expressions_must_be_same_type.rs:12:5
    |
12  |     select(array((1, 3f64))).get_result::<Vec<f64>>(&mut connection).unwrap();
    |     ^^^^^^ the trait `SelectableExpression<NoFromClause>` is not implemented for `{integer}`
    |
   ::: $DIESEL/src/query_builder/functions.rs
    |
    |     crate::dsl::BareSelect<T>: AsQuery,
    |                                ------- required by this bound in `diesel::select`
    |
    = help: the following implementations were found:
              <&'a T as SelectableExpression<QS>>
              <(T0, T1) as SelectableExpression<QS>>
              <(T0, T1, T2) as SelectableExpression<QS>>
              <(T0, T1, T2, T3) as SelectableExpression<QS>>
            and 144 others
    = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>)`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>`
    = note: required because of the requirements on the impl of `SelectClauseExpression<NoFromClause>` for `diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`
    = note: required because of the requirements on the impl of `AsQuery` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`

error[E0277]: the trait bound `{integer}: ValidGrouping<()>` is not satisfied
   --> tests/fail/array_expressions_must_be_same_type.rs:12:5
    |
12  |     select(array((1, 3f64))).get_result::<Vec<f64>>(&mut connection).unwrap();
    |     ^^^^^^ the trait `ValidGrouping<()>` is not implemented for `{integer}`
    |
   ::: $DIESEL/src/query_builder/functions.rs
    |
    |     crate::dsl::BareSelect<T>: AsQuery,
    |                                ------- required by this bound in `diesel::select`
    |
    = help: the following implementations were found:
              <&'a T as ValidGrouping<GB>>
              <(T0, T1) as ValidGrouping<__GroupByClause>>
              <(T0, T1, T2) as ValidGrouping<__GroupByClause>>
              <(T0, T1, T2, T3) as ValidGrouping<__GroupByClause>>
            and 132 others
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>)`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`
    = note: required because of the requirements on the impl of `AsQuery` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`

error[E0277]: the trait bound `{integer}: SelectableExpression<NoFromClause>` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:12:30
   |
12 |     select(array((1, 3f64))).get_result::<Vec<f64>>(&mut connection).unwrap();
   |                              ^^^^^^^^^^ the trait `SelectableExpression<NoFromClause>` is not implemented for `{integer}`
   |
   = help: the following implementations were found:
             <&'a T as SelectableExpression<QS>>
             <(T0, T1) as SelectableExpression<QS>>
             <(T0, T1, T2) as SelectableExpression<QS>>
             <(T0, T1, T2, T3) as SelectableExpression<QS>>
           and 144 others
   = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>)`
   = note: 1 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>`
   = note: required because of the requirements on the impl of `SelectClauseExpression<NoFromClause>` for `diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>`
   = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`
   = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<f64>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`

error[E0277]: the trait bound `{integer}: ValidGrouping<()>` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:12:30
   |
12 |     select(array((1, 3f64))).get_result::<Vec<f64>>(&mut connection).unwrap();
   |                              ^^^^^^^^^^ the trait `ValidGrouping<()>` is not implemented for `{integer}`
   |
   = help: the following implementations were found:
             <&'a T as ValidGrouping<GB>>
             <(T0, T1) as ValidGrouping<__GroupByClause>>
             <(T0, T1, T2) as ValidGrouping<__GroupByClause>>
             <(T0, T1, T2, T3) as ValidGrouping<__GroupByClause>>
           and 132 others
   = note: required because of the requirements on the impl of `ValidGrouping<()>` for `({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>)`
   = note: 1 redundant requirements hidden
   = note: required because of the requirements on the impl of `ValidGrouping<()>` for `diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>`
   = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`
   = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<f64>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`

error[E0277]: the trait bound `{integer}: QueryFragment<Pg>` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:12:30
   |
12 |     select(array((1, 3f64))).get_result::<Vec<f64>>(&mut connection).unwrap();
   |                              ^^^^^^^^^^ the trait `QueryFragment<Pg>` is not implemented for `{integer}`
   |
   = help: the following implementations were found:
             <&'a T as QueryFragment<DB>>
             <() as QueryFragment<DB>>
             <(T0, T1) as QueryFragment<__DB>>
             <(T0, T1, T2) as QueryFragment<__DB>>
           and 254 others
   = note: required because of the requirements on the impl of `QueryFragment<Pg>` for `({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>)`
   = note: 3 redundant requirements hidden
   = note: required because of the requirements on the impl of `QueryFragment<Pg>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`
   = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<f64>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`

error[E0277]: the trait bound `{integer}: QueryId` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:12:30
   |
12 |     select(array((1, 3f64))).get_result::<Vec<f64>>(&mut connection).unwrap();
   |                              ^^^^^^^^^^ the trait `QueryId` is not implemented for `{integer}`
   |
   = help: the following implementations were found:
             <&'a T as QueryId>
             <() as QueryId>
             <(T0, T1) as QueryId>
             <(T0, T1, T2) as QueryId>
           and 219 others
   = note: required because of the requirements on the impl of `QueryId` for `({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>)`
   = note: 3 redundant requirements hidden
   = note: required because of the requirements on the impl of `QueryId` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`
   = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<f64>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<({integer}, diesel::expression::bound::Bound<diesel::sql_types::Double, f64>), diesel::sql_types::Double>>>`

error[E0277]: the trait bound `{integer}: diesel::Expression` is not satisfied
  --> tests/fail/array_expressions_must_be_same_type.rs:12:12
   |
12 |     select(array((1, 3f64))).get_result::<Vec<f64>>(&mut connection).unwrap();
   |            ^^^^^ the trait `diesel::Expression` is not implemented for `{integer}`
   |
  ::: $DIESEL/src/pg/expression/array.rs
   |
   |     T: AsExpressionList<ST>,
   |        -------------------- required by this bound in `diesel::dsl::array`
   |
   = help: the following implementations were found:
             <&'a T as diesel::Expression>
             <(T0, T1) as diesel::Expression>
             <(T0, T1, T2) as diesel::Expression>
             <(T0, T1, T2, T3) as diesel::Expression>
           and 113 others
   = note: required because of the requirements on the impl of `AsExpression<diesel::sql_types::Double>` for `{integer}`
   = note: required because of the requirements on the impl of `AsExpressionList<diesel::sql_types::Double>` for `({integer}, f64)`
