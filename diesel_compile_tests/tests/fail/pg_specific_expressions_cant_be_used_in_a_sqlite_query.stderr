error[E0271]: type mismatch resolving `<diesel::SqliteConnection as diesel::Connection>::Backend == Pg`
  --> $DIR/pg_specific_expressions_cant_be_used_in_a_sqlite_query.rs:27:10
   |
27 |         .load::<i32>(&mut connection);
   |          ^^^^ expected struct `Sqlite`, found struct `Pg`
   |
   = note: required because of the requirements on the impl of `LoadQuery<diesel::SqliteConnection, i32>` for `SelectStatement<users::table, diesel::query_builder::select_clause::SelectClause<columns::id>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause<Grouped<diesel::expression::operators::Eq<columns::name, diesel::pg::expression::array_comparison::Any<diesel::expression::bound::Bound<Array<diesel::sql_types::Text>, Vec<std::string::String>>>>>>>`

error[E0271]: type mismatch resolving `<diesel::SqliteConnection as diesel::Connection>::Backend == Pg`
  --> $DIR/pg_specific_expressions_cant_be_used_in_a_sqlite_query.rs:29:10
   |
29 |         .load::<i32>(&mut connection);
   |          ^^^^ expected struct `Sqlite`, found struct `Pg`
   |
   = note: required because of the requirements on the impl of `LoadQuery<diesel::SqliteConnection, i32>` for `SelectStatement<users::table, diesel::query_builder::select_clause::SelectClause<columns::id>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause<Grouped<IsNotDistinctFrom<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>>>>`

error[E0271]: type mismatch resolving `<diesel::SqliteConnection as diesel::Connection>::Backend == Pg`
  --> $DIR/pg_specific_expressions_cant_be_used_in_a_sqlite_query.rs:31:10
   |
31 |         .load::<i32>(&mut connection);
   |          ^^^^ expected struct `Sqlite`, found struct `Pg`
   |
   = note: required because of the requirements on the impl of `LoadQuery<diesel::SqliteConnection, i32>` for `SelectStatement<users::table, diesel::query_builder::select_clause::SelectClause<columns::id>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause<Grouped<diesel::expression::operators::Eq<diesel::dsl::now, Grouped<diesel::pg::expression::date_and_time::AtTimeZone<diesel::dsl::now, diesel::expression::bound::Bound<diesel::sql_types::Text, &str>>>>>>>`

error[E0599]: the method `execute` exists for struct `IncompleteOnConflict<InsertStatement<users::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &&str>>>,), users::table>>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<OnConstraint<'_>>>`, but its trait bounds were not satisfied
   --> $DIR/pg_specific_expressions_cant_be_used_in_a_sqlite_query.rs:34:10
    |
34  |         .execute(&mut connection);
    |          ^^^^^^^ method cannot be called on `IncompleteOnConflict<InsertStatement<users::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &&str>>>,), users::table>>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<OnConstraint<'_>>>` due to unsatisfied trait bounds
    |
   ::: $DIESEL/src/upsert/on_conflict_extension.rs
    |
    | pub struct IncompleteOnConflict<Stmt, Target> {
    | ---------------------------------------------
    | |
    | doesn't satisfy `_: Table`
    | doesn't satisfy `_: diesel::RunQueryDsl<_>`
    |
    = note: the following trait bounds were not satisfied:
            `IncompleteOnConflict<InsertStatement<users::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &&str>>>,), users::table>>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<OnConstraint<'_>>>: Table`
            which is required by `IncompleteOnConflict<InsertStatement<users::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &&str>>>,), users::table>>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<OnConstraint<'_>>>: diesel::RunQueryDsl<_>`
            `&IncompleteOnConflict<InsertStatement<users::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &&str>>>,), users::table>>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<OnConstraint<'_>>>: Table`
            which is required by `&IncompleteOnConflict<InsertStatement<users::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &&str>>>,), users::table>>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<OnConstraint<'_>>>: diesel::RunQueryDsl<_>`
            `&mut IncompleteOnConflict<InsertStatement<users::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &&str>>>,), users::table>>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<OnConstraint<'_>>>: Table`
            which is required by `&mut IncompleteOnConflict<InsertStatement<users::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<columns::name, diesel::expression::bound::Bound<diesel::sql_types::Text, &&str>>>,), users::table>>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<OnConstraint<'_>>>: diesel::RunQueryDsl<_>`
