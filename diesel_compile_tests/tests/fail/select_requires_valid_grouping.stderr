error[E0271]: type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:85:53
   |
LL |     let source = users::table.group_by(users::name).select(users::id);
   |                                                     ^^^^^^ type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::Yes`
  --> tests/fail/select_requires_valid_grouping.rs:8:9
   |
8  |         name -> Text,
   |         ^^^^
note: required for `users::columns::id` to implement `ValidGrouping<users::columns::name>`
  --> tests/fail/select_requires_valid_grouping.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`

   
error[E0271]: type mismatch resolving `<(name, hair_color) as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:89:10
   |
LL |         .select(users::id);
   |          ^^^^^^ expected `Yes`, found `No`
   |
note: required for `users::columns::id` to implement `ValidGrouping<(users::columns::name, users::columns::hair_color)>`
  --> tests/fail/select_requires_valid_grouping.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`

   
error[E0271]: type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:93:10
   |
LL |         .select((users::name, users::id));
   |          ^^^^^^ type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::Yes`
  --> tests/fail/select_requires_valid_grouping.rs:8:9
   |
8  |         name -> Text,
   |         ^^^^
note: required for `users::columns::id` to implement `ValidGrouping<users::columns::name>`
  --> tests/fail/select_requires_valid_grouping.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 1 redundant requirement hidden
   = note: required for `(users::columns::name, users::columns::id)` to implement `ValidGrouping<users::columns::name>`
   = note: required for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<(users::columns::name, users::columns::id)>`

   
error[E0271]: type mismatch resolving `<(name, hair_color) as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:97:10
   |
LL |         .select(users::id);
   |          ^^^^^^ expected `Yes`, found `No`
   |
note: required for `users::columns::id` to implement `ValidGrouping<(users::columns::name, users::columns::hair_color)>`
  --> tests/fail/select_requires_valid_grouping.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`

   
error[E0271]: type mismatch resolving `<(id, title) as IsContainedInGroupBy<id>>::Output == Yes`
   --> tests/fail/select_requires_valid_grouping.rs:102:10
    |
LL |         .select((users::all_columns, posts::id));
    |          ^^^^^^ expected `Yes`, found `No`
    |
note: required for `posts::columns::id` to implement `ValidGrouping<(users::columns::id, posts::columns::title)>`
   --> tests/fail/select_requires_valid_grouping.rs:15:9
    |
15  |         id -> Integer,
    |         ^^
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: 1 redundant requirement hidden
    = note: required for `((users::columns::id, users::columns::name, users::columns::hair_color), posts::columns::id)` to implement `ValidGrouping<(users::columns::id, posts::columns::title)>`
    = note: required for `SelectStatement<FromClause<...>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<((users::columns::id, users::columns::name, users::columns::hair_color), posts::columns::id)>`
 
    
error[E0277]: the trait bound `users::columns::id: IsContainedInGroupBy<comments::columns::id>` is not satisfied
   --> tests/fail/select_requires_valid_grouping.rs:107:10
    |
LL |         .select((users::all_columns, posts::all_columns, comments::id));
    |          ^^^^^^ the trait `IsContainedInGroupBy<comments::columns::id>` is not implemented for `users::columns::id`
    |
    = note: if your query contains columns from several tables in your group by or select clause make sure to call `allow_columns_to_appear_in_same_group_by_clause!` with these columns
    = help: the following other types implement trait `IsContainedInGroupBy<T>`:
              `users::columns::id` implements `IsContainedInGroupBy<posts::columns::id>`
              `users::columns::id` implements `IsContainedInGroupBy<posts::columns::title>`
              `users::columns::id` implements `IsContainedInGroupBy<posts::columns::user_id>`
              `users::columns::id` implements `IsContainedInGroupBy<users::columns::hair_color>`
              `users::columns::id` implements `IsContainedInGroupBy<users::columns::id>`
              `users::columns::id` implements `IsContainedInGroupBy<users::columns::name>`
    = note: required for `(users::columns::id, posts::columns::id)` to implement `IsContainedInGroupBy<comments::columns::id>`
note: required for `comments::columns::id` to implement `ValidGrouping<(users::columns::id, posts::columns::id)>`
   --> tests/fail/select_requires_valid_grouping.rs:23:9
    |
23  |         id -> Integer,
    |         ^^
    = note: 2 redundant requirements hidden
    = note: required for `((id, name, hair_color), (id, title, user_id), id)` to implement `ValidGrouping<(users::columns::id, posts::columns::id)>`
    = note: required for `SelectStatement<FromClause<...>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<((users::columns::id, users::columns::name, users::columns::hair_color), (posts::columns::id, posts::columns::title, posts::columns::user_id), comments::columns::id)>`
 
    
error[E0277]: the trait bound `posts::columns::id: IsContainedInGroupBy<comments::columns::id>` is not satisfied
   --> tests/fail/select_requires_valid_grouping.rs:107:10
    |
LL |         .select((users::all_columns, posts::all_columns, comments::id));
    |          ^^^^^^ the trait `IsContainedInGroupBy<comments::columns::id>` is not implemented for `posts::columns::id`
    |
    = note: if your query contains columns from several tables in your group by or select clause make sure to call `allow_columns_to_appear_in_same_group_by_clause!` with these columns
    = help: the following other types implement trait `IsContainedInGroupBy<T>`:
              `posts::columns::id` implements `IsContainedInGroupBy<posts::columns::id>`
              `posts::columns::id` implements `IsContainedInGroupBy<posts::columns::title>`
              `posts::columns::id` implements `IsContainedInGroupBy<posts::columns::user_id>`
              `posts::columns::id` implements `IsContainedInGroupBy<users::columns::hair_color>`
              `posts::columns::id` implements `IsContainedInGroupBy<users::columns::id>`
              `posts::columns::id` implements `IsContainedInGroupBy<users::columns::name>`
    = note: required for `(posts::columns::id,)` to implement `IsContainedInGroupBy<comments::columns::id>`
    = note: 1 redundant requirement hidden
    = note: required for `(users::columns::id, posts::columns::id)` to implement `IsContainedInGroupBy<comments::columns::id>`
note: required for `comments::columns::id` to implement `ValidGrouping<(users::columns::id, posts::columns::id)>`
   --> tests/fail/select_requires_valid_grouping.rs:23:9
    |
23  |         id -> Integer,
    |         ^^
    = note: 2 redundant requirements hidden
    = note: required for `((id, name, hair_color), (id, title, user_id), id)` to implement `ValidGrouping<(users::columns::id, posts::columns::id)>`
    = note: required for `SelectStatement<FromClause<...>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<((users::columns::id, users::columns::name, users::columns::hair_color), (posts::columns::id, posts::columns::title, posts::columns::user_id), comments::columns::id)>`
