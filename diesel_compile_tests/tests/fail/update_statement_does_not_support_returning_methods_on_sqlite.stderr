error[E0277]: `ReturningClause<(columns::id, columns::name)>` is no valid SQL fragment for the `Sqlite` backend
    --> tests/fail/update_statement_does_not_support_returning_methods_on_sqlite.rs:18:21
     |
18   |         .get_result(&mut connection);
     |          ---------- ^^^^^^^^^^^^^^^ the trait `QueryFragment<Sqlite, DoesNotSupportReturningClause>` is not implemented for `ReturningClause<(columns::id, columns::name)>`
     |          |
     |          required by a bound introduced by this call
     |
     = note: this usually means that the `Sqlite` database system does not support 
             this SQL syntax
     = help: the following other types implement trait `QueryFragment<DB, SP>`:
               `ReturningClause<Expr>` implements `QueryFragment<DB, PgLikeReturningClause>`
               `ReturningClause<Expr>` implements `QueryFragment<DB, sqlite::backend::SqliteReturningClause>`
               `ReturningClause<Expr>` implements `QueryFragment<DB>`
     = note: required for `ReturningClause<(columns::id, columns::name)>` to implement `QueryFragment<Sqlite>`
     = note: 1 redundant requirement hidden
     = note: required for `UpdateStatement<table, WhereClause<Grouped<Eq<id, ...>>>, ..., ...>` to implement `QueryFragment<Sqlite>`
     = note: required for `UpdateStatement<table, WhereClause<Grouped<Eq<id, ...>>>, ...>` to implement `LoadQuery<'_, diesel::SqliteConnection, _>`
note: required by a bound in `get_result`
    --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
     |
LL |     fn get_result<'query, U>(self, conn: &mut Conn) -> QueryResult<U>
     |        ---------- required by a bound in this associated function
LL |     where
LL |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `RunQueryDsl::get_result`
  
     
error[E0277]: `ReturningClause<columns::name>` is no valid SQL fragment for the `Sqlite` backend
    --> tests/fail/update_statement_does_not_support_returning_methods_on_sqlite.rs:24:21
     |
24   |         .get_result(&mut connection);
     |          ---------- ^^^^^^^^^^^^^^^ the trait `QueryFragment<Sqlite, DoesNotSupportReturningClause>` is not implemented for `ReturningClause<columns::name>`
     |          |
     |          required by a bound introduced by this call
     |
     = note: this usually means that the `Sqlite` database system does not support 
             this SQL syntax
     = help: the following other types implement trait `QueryFragment<DB, SP>`:
               `ReturningClause<Expr>` implements `QueryFragment<DB, PgLikeReturningClause>`
               `ReturningClause<Expr>` implements `QueryFragment<DB, sqlite::backend::SqliteReturningClause>`
               `ReturningClause<Expr>` implements `QueryFragment<DB>`
     = note: required for `ReturningClause<columns::name>` to implement `QueryFragment<Sqlite>`
     = note: 1 redundant requirement hidden
     = note: required for `UpdateStatement<table, WhereClause<Grouped<Eq<id, ...>>>, ..., ...>` to implement `QueryFragment<Sqlite>`
     = note: required for `UpdateStatement<table, WhereClause<Grouped<Eq<id, ...>>>, ..., ...>` to implement `LoadQuery<'_, diesel::SqliteConnection, _>`
note: required by a bound in `get_result`
    --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
     |
LL |     fn get_result<'query, U>(self, conn: &mut Conn) -> QueryResult<U>
     |        ---------- required by a bound in this associated function
LL |     where
LL |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `RunQueryDsl::get_result`
  
     For more information about this error, try `rustc --explain E0277`.
