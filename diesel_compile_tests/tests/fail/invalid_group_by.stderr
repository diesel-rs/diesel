error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:27:10
   |
LL |         .group_by(posts::id)
   |          ^^^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::id` to implement `AppearsOnTable<FromClause<users::table>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
LL |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<users::table>>` to implement `GroupByDsl<posts::columns::id>`

error[E0271]: type mismatch resolving `<id as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/invalid_group_by.rs:29:10
   |
LL |         .select(users::id)
   |          ^^^^^^ type mismatch resolving `<id as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::Yes`
  --> tests/fail/invalid_group_by.rs:15:9
   |
LL |         id -> Integer,
   |         ^^
note: required for `users::columns::id` to implement `ValidGrouping<posts::columns::id>`
  --> tests/fail/invalid_group_by.rs:8:9
   |
8  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`

   
error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:37:10
   |
LL |         .group_by(posts::id)
   |          ^^^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::id` to implement `AppearsOnTable<FromClause<users::table>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
LL |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, SelectClause<id>>` to implement `GroupByDsl<posts::columns::id>`

   
error[E0271]: type mismatch resolving `<FromClause<Alias<user1>> as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:46:10
   |
LL |         .group_by(posts::id)
   |          ^^^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::id` to implement `AppearsOnTable<FromClause<Alias<user1>>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
LL |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<Alias<user1>>>` to implement `GroupByDsl<posts::columns::id>`

error[E0277]: the trait bound `AliasedField<user1, users::columns::id>: ValidGrouping<posts::columns::id>` is not satisfied
   --> tests/fail/invalid_group_by.rs:48:17
    |
48  |         .select(user_alias.field(users::id))
    |          ------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidGrouping<posts::columns::id>` is not implemented for `AliasedField<user1, users::columns::id>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `ValidGrouping<GroupByClause>`:
              `AliasedField<S, C2>` implements `ValidGrouping<AliasedField<S, C1>>`
              `AliasedField<S, C>` implements `ValidGrouping<()>`
    = note: required for `SelectStatement<FromClause<Alias<...>>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<AliasedField<user1, users::columns::id>>`
note: required by a bound in `diesel::QueryDsl::select`
   --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
    |
LL |     fn select<Selection>(self, selection: Selection) -> Select<Self, Selection>
    |        ------ required by a bound in this associated function
...
LL |         Self: methods::SelectDsl<Selection>,
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::select`
 
    
error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:54:10
   |
LL |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Once`, found `Never`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsOnTable<FromClause<users::table>>`
   = note: required for `SelectStatement<FromClause<users::table>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

error[E0277]: the trait bound `AliasedField<post1, posts::columns::id>: IsContainedInGroupBy<users::columns::id>` is not satisfied
  --> tests/fail/invalid_group_by.rs:56:10
   |
LL |         .select(users::id)
   |          ^^^^^^ the trait `IsContainedInGroupBy<users::columns::id>` is not implemented for `AliasedField<post1, posts::columns::id>`
   |
   = note: if your query contains columns from several tables in your group by or select clause make sure to call `allow_columns_to_appear_in_same_group_by_clause!` with these columns
   = help: the following other types implement trait `IsContainedInGroupBy<T>`:
             `(T0, T1)` implements `IsContainedInGroupBy<Col>`
             `(T0, T1, T2)` implements `IsContainedInGroupBy<Col>`
             `(T0, T1, T2, T3)` implements `IsContainedInGroupBy<Col>`
             `(T0, T1, T2, T3, T4)` implements `IsContainedInGroupBy<Col>`
             `(T0, T1, T2, T3, T4, T5)` implements `IsContainedInGroupBy<Col>`
             `(T0, T1, T2, T3, T4, T5, T6)` implements `IsContainedInGroupBy<Col>`
             `(T0, T1, T2, T3, T4, T5, T6, T7)` implements `IsContainedInGroupBy<Col>`
             `(T0, T1, T2, T3, T4, T5, T6, T7, T8)` implements `IsContainedInGroupBy<Col>`
           and N others
note: required for `users::columns::id` to implement `ValidGrouping<AliasedField<post1, posts::columns::id>>`
  --> tests/fail/invalid_group_by.rs:8:9
   |
8  |         id -> Integer,
   |         ^^
   = note: required for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`

   
error[E0271]: type mismatch resolving `<FromClause<Alias<user1>> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:62:10
   |
LL |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Once`, found `Never`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsOnTable<FromClause<Alias<user1>>>`
   = note: required for `SelectStatement<FromClause<Alias<user1>>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

error[E0277]: the trait bound `AliasedField<user1, id>: ValidGrouping<AliasedField<post1, id>>` is not satisfied
   --> tests/fail/invalid_group_by.rs:64:17
    |
64  |         .select(user_alias.field(users::id))
    |          ------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidGrouping<AliasedField<post1, posts::columns::id>>` is not implemented for `AliasedField<user1, users::columns::id>`
    |          |
    |          required by a bound introduced by this call
    |
    = help: the following other types implement trait `ValidGrouping<GroupByClause>`:
              `AliasedField<S, C2>` implements `ValidGrouping<AliasedField<S, C1>>`
              `AliasedField<S, C>` implements `ValidGrouping<()>`
    = note: required for `SelectStatement<FromClause<Alias<...>>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<AliasedField<user1, users::columns::id>>`
note: required by a bound in `diesel::QueryDsl::select`
   --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
    |
LL |     fn select<Selection>(self, selection: Selection) -> Select<Self, Selection>
    |        ------ required by a bound in this associated function
...
LL |         Self: methods::SelectDsl<Selection>,
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::select`
 
    
error[E0271]: type mismatch resolving `<FromClause<Alias<user1>> as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:71:10
   |
LL |         .group_by(posts::id)
   |          ^^^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::id` to implement `AppearsOnTable<FromClause<Alias<user1>>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
LL |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<Alias<user1>>, SelectClause<...>>` to implement `GroupByDsl<posts::columns::id>`

   
error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:78:10
   |
LL |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Once`, found `Never`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsOnTable<FromClause<users::table>>`
   = note: required for `SelectStatement<FromClause<table>, SelectClause<id>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

   
error[E0271]: type mismatch resolving `<FromClause<Alias<user1>> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:85:10
   |
LL |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Once`, found `Never`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsOnTable<FromClause<Alias<user1>>>`
   = note: required for `SelectStatement<FromClause<Alias<user1>>, SelectClause<...>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`
