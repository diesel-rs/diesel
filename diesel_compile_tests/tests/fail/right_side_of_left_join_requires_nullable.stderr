error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:44:18
   |
LL |     let _ = join.select(posts::title);
   |                  ^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 1 redundant requirement hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`

   
error[E0277]: cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:44:18
   |
LL |     let _ = join.select(posts::title);
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
             `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
             `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
             `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
             `posts::columns::title` implements `SelectableExpression<posts::table>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`

   
error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:52:18
   |
LL |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 2 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`

   
error[E0277]: cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:52:18
   |
LL |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
             `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
             `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
             `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
             `posts::columns::title` implements `SelectableExpression<posts::table>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: 2 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`

   
error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:56:31
   |
LL |     let _ = join.select(lower(posts::title.nullable()));
   |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
   |                         |
   |                         required by a bound introduced by this call
   |
   = note: expected struct `diesel::sql_types::Text`
              found struct `Nullable<diesel::sql_types::Text>`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:33:1
   |
LL | #[declare_sql_function]
   | ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
LL | extern "SQL" {
LL |     fn lower(x: Text) -> Text;
   |        ----- required by a bound in this function
   = note: this error originates in the attribute macro `declare_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:56:25
   |
LL |     let _ = join.select(lower(posts::title.nullable()));
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
   |
   = note: expected struct `diesel::sql_types::Text`
              found struct `Nullable<diesel::sql_types::Text>`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:67:18
   |
LL |     let _ = join.select(posts::title);
   |                  ^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 3 redundant requirements hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<..., ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`

   
error[E0277]: cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:67:18
   |
LL |     let _ = join.select(posts::title);
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
             `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
             `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
             `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
             `posts::columns::title` implements `SelectableExpression<posts::table>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: 3 redundant requirements hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<..., ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`

   
error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:75:18
   |
LL |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 4 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<..., ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`

   
error[E0277]: cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:75:18
   |
LL |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
             `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
             `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
             `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
             `posts::columns::title` implements `SelectableExpression<posts::table>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: 4 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<..., ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`

   
error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:79:31
   |
LL |     let _ = join.select(lower(posts::title.nullable()));
   |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
   |                         |
   |                         required by a bound introduced by this call
   |
   = note: expected struct `diesel::sql_types::Text`
              found struct `Nullable<diesel::sql_types::Text>`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:33:1
   |
LL | #[declare_sql_function]
   | ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
LL | extern "SQL" {
LL |     fn lower(x: Text) -> Text;
   |        ----- required by a bound in this function
   = note: this error originates in the attribute macro `declare_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:79:25
   |
LL |     let _ = join.select(lower(posts::title.nullable()));
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
   |
   = note: expected struct `diesel::sql_types::Text`
              found struct `Nullable<diesel::sql_types::Text>`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:90:18
   |
LL |     let _ = join.select(posts::title);
   |                  ^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 3 redundant requirements hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<..., ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`

   
error[E0277]: cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:90:18
   |
LL |     let _ = join.select(posts::title);
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
             `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
             `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
             `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
             `posts::columns::title` implements `SelectableExpression<posts::table>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: 3 redundant requirements hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<..., ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`

   
error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:98:18
   |
LL |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 4 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<..., ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`

   
error[E0277]: cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:98:18
   |
LL |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
             `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
             `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
             `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
             `posts::columns::title` implements `SelectableExpression<posts::table>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
             `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
LL |         title -> Text,
   |         ^^^^^
   = note: 4 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<..., ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`

   
error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:102:31
    |
LL |     let _ = join.select(lower(posts::title.nullable()));
    |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
    |                         |
    |                         required by a bound introduced by this call
    |
    = note: expected struct `diesel::sql_types::Text`
               found struct `Nullable<diesel::sql_types::Text>`
    = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:33:1
    |
33  | #[declare_sql_function]
    | ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
34  | extern "SQL" {
35  |     fn lower(x: Text) -> Text;
    |        ----- required by a bound in this function
    = note: this error originates in the attribute macro `declare_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:102:25
    |
LL |     let _ = join.select(lower(posts::title.nullable()));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
    |
    = note: expected struct `diesel::sql_types::Text`
               found struct `Nullable<diesel::sql_types::Text>`
    = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`

error[E0271]: type mismatch resolving `<SelectStatement<...> as AppearsInFromClause<...>>::Count == Never`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:111:18
    |
LL |     let _ = join.select(posts::title);
    |                  ^^^^^^ expected `Never`, found `Once`
    |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: 1 redundant requirement hidden
    = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
 
    
error[E0277]: cannot select `posts::columns::title` from `pets::table`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:111:18
    |
LL |     let _ = join.select(posts::title);
    |                  ^^^^^^ the trait `SelectableExpression<pets::table>` is not implemented for `posts::columns::title`
    |
    = note: `posts::columns::title` is no valid selection for `pets::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
              `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
              `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
              `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
              `posts::columns::title` implements `SelectableExpression<posts::table>`
              `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
              `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: 1 redundant requirement hidden
    = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
 
    
error[E0271]: type mismatch resolving `<SelectStatement<...> as AppearsInFromClause<...>>::Count == Never`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:119:18
    |
LL |     let _ = join.select(lower(posts::title));
    |                  ^^^^^^ expected `Never`, found `Once`
    |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: 2 redundant requirements hidden
    = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
 
    
error[E0277]: cannot select `posts::columns::title` from `pets::table`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:119:18
    |
LL |     let _ = join.select(lower(posts::title));
    |                  ^^^^^^ the trait `SelectableExpression<pets::table>` is not implemented for `posts::columns::title`
    |
    = note: `posts::columns::title` is no valid selection for `pets::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
              `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
              `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
              `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
              `posts::columns::title` implements `SelectableExpression<posts::table>`
              `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
              `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: 2 redundant requirements hidden
    = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
 
    
error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:123:31
    |
LL |     let _ = join.select(lower(posts::title.nullable()));
    |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
    |                         |
    |                         required by a bound introduced by this call
    |
    = note: expected struct `diesel::sql_types::Text`
               found struct `Nullable<diesel::sql_types::Text>`
    = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:33:1
    |
33  | #[declare_sql_function]
    | ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
34  | extern "SQL" {
35  |     fn lower(x: Text) -> Text;
    |        ----- required by a bound in this function
    = note: this error originates in the attribute macro `declare_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:123:25
    |
LL |     let _ = join.select(lower(posts::title.nullable()));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
    |
    = note: expected struct `diesel::sql_types::Text`
               found struct `Nullable<diesel::sql_types::Text>`
    = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:132:18
    |
LL |     let _ = join.select(posts::title);
    |                  ^^^^^^ expected `Never`, found `Once`
    |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: 4 redundant requirements hidden
    = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
 
    
error[E0277]: cannot select `posts::columns::title` from `users::table`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:132:18
    |
LL |     let _ = join.select(posts::title);
    |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = note: `posts::columns::title` is no valid selection for `users::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
              `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
              `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
              `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
              `posts::columns::title` implements `SelectableExpression<posts::table>`
              `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
              `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: 4 redundant requirements hidden
    = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
 
    
error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:140:18
    |
LL |     let _ = join.select(lower(posts::title));
    |                  ^^^^^^ expected `Never`, found `Once`
    |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: 5 redundant requirements hidden
    = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
 
    
error[E0277]: cannot select `posts::columns::title` from `users::table`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:140:18
    |
LL |     let _ = join.select(lower(posts::title));
    |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`
    |
    = note: `posts::columns::title` is no valid selection for `users::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              `posts::columns::title` implements `SelectableExpression<JoinOn<Join, On>>`
              `posts::columns::title` implements `SelectableExpression<Only<posts::table>>`
              `posts::columns::title` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
              `posts::columns::title` implements `SelectableExpression<Tablesample<posts::table, TSM>>`
              `posts::columns::title` implements `SelectableExpression<posts::table>`
              `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
              `posts::columns::title` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: 5 redundant requirements hidden
    = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
 
    
error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:144:31
    |
LL |     let _ = join.select(lower(posts::title.nullable()));
    |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
    |                         |
    |                         required by a bound introduced by this call
    |
    = note: expected struct `diesel::sql_types::Text`
               found struct `Nullable<diesel::sql_types::Text>`
    = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:33:1
    |
33  | #[declare_sql_function]
    | ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
34  | extern "SQL" {
35  |     fn lower(x: Text) -> Text;
    |        ----- required by a bound in this function
    = note: this error originates in the attribute macro `declare_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:144:25
    |
LL |     let _ = join.select(lower(posts::title.nullable()));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
    |
    = note: expected struct `diesel::sql_types::Text`
               found struct `Nullable<diesel::sql_types::Text>`
    = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
