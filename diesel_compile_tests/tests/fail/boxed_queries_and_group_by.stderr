error[E0277]: cannot box `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` for backend `_`
  --> tests/fail/boxed_queries_and_group_by.rs:55:40
   |
LL |     users::table.group_by(users::name).into_boxed();
   |                                        ^^^^^^^^^^ the trait `BoxedDsl<'_, _>` is not implemented for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>`
   |
   = note: this either means `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` is no valid SQL for `_`
   = note: or this means `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` uses clauses not supporting boxing like the `LOCKING` or `GROUP BY` clause
   = help: the following other types implement trait `BoxedDsl<'a, DB>`:
             SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H>
             SelectStatement<NoFromClause, S, D, W, O, LOf, G, H>

   
error[E0271]: type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/boxed_queries_and_group_by.rs:60:10
   |
LL |         .select(users::id)
   |          ^^^^^^ type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::Yes`
  --> tests/fail/boxed_queries_and_group_by.rs:8:9
   |
8  |         name -> Text,
   |         ^^^^
note: required for `users::columns::id` to implement `ValidGrouping<users::columns::name>`
  --> tests/fail/boxed_queries_and_group_by.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`

   
error[E0277]: cannot box `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` for backend `_`
  --> tests/fail/boxed_queries_and_group_by.rs:62:10
   |
LL |         .into_boxed();
   |          ^^^^^^^^^^ the trait `BoxedDsl<'_, _>` is not implemented for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>`
   |
   = note: this either means `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` is no valid SQL for `_`
   = note: or this means `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>` uses clauses not supporting boxing like the `LOCKING` or `GROUP BY` clause
   = help: the following other types implement trait `BoxedDsl<'a, DB>`:
             SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H>
             SelectStatement<NoFromClause, S, D, W, O, LOf, G, H>

   
error[E0271]: type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/boxed_queries_and_group_by.rs:69:10
   |
LL |         .select(users::id)
   |          ^^^^^^ type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::Yes`
  --> tests/fail/boxed_queries_and_group_by.rs:8:9
   |
8  |         name -> Text,
   |         ^^^^
note: required for `users::columns::id` to implement `ValidGrouping<users::columns::name>`
  --> tests/fail/boxed_queries_and_group_by.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `BoxedSelectStatement<'_, Text, FromClause<table>, _, name>` to implement `SelectDsl<users::columns::id>`

   
error[E0277]: the trait bound `BoxedSelectStatement<'_, Text, FromClause<table>, _, name>: Table` is not satisfied
  --> tests/fail/boxed_queries_and_group_by.rs:77:10
   |
LL |         .inner_join(posts::table)
   |          ^^^^^^^^^^ the trait `Table` is not implemented for `BoxedSelectStatement<'_, Text, FromClause<table>, _, name>`
   |
   = help: the following other types implement trait `Table`:
             Only<S>
             Tablesample<S, TSM>
             pg::metadata_lookup::pg_namespace::table
             pg::metadata_lookup::pg_type::table
             posts::table
             users::table
   = note: required for `BoxedSelectStatement<'_, Text, FromClause<table>, _, name>` to implement `JoinTo<query_source::joins::OnClauseWrapper<_, _>>`
   = note: required for `BoxedSelectStatement<'_, Text, FromClause<table>, _, name>` to implement `JoinWithImplicitOnClause<query_source::joins::OnClauseWrapper<_, _>, Inner>`

   
error[E0308]: mismatched types
   --> tests/fail/boxed_queries_and_group_by.rs:77:21
    |
77  |         .inner_join(posts::table)
    |          ---------- ^^^^^^^^^^^^ expected `OnClauseWrapper<_, _>`, found `table`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `query_source::joins::OnClauseWrapper<_, _>`
               found struct `posts::table`
help: the return type of this call is `posts::table` due to the type of the argument passed
   --> tests/fail/boxed_queries_and_group_by.rs:73:5
    |
73  | /     users::table
74  | |         .group_by(users::name)
75  | |         .select(users::name)
76  | |         .into_boxed()
77  | |         .inner_join(posts::table)
    | |_____________________------------^
    |                       |
    |                       this argument influences the return type of `inner_join`
note: method defined here
   --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
    |
LL |     fn inner_join<Rhs>(self, rhs: Rhs) -> InnerJoin<Self, Rhs>
    |        ^^^^^^^^^^

error[E0308]: mismatched types
  --> tests/fail/boxed_queries_and_group_by.rs:85:9
   |
LL |     let mut a = users::table.into_boxed();
   |                 ------------------------- expected due to this value
...
LL |     a = users::table.group_by(users::id).into_boxed();
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `BoxedSelectStatement<'_, ..., ..., _>`, found `BoxedSelectStatement<'_, ..., ..., _, ...>`
   |
   = note: expected struct `BoxedSelectStatement<'_, _, _, _, ()>`
              found struct `BoxedSelectStatement<'_, _, _, _, users::columns::id>`

error[E0277]: the trait bound `BoxedSelectStatement<'_, (Integer, Text), ..., _>: GroupByDsl<_>` is not satisfied
  --> tests/fail/boxed_queries_and_group_by.rs:91:10
   |
LL |         .group_by(users::id)
   |          ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `BoxedSelectStatement<'_, (Integer, Text), FromClause<table>, _>`
   |
   = help: the following other types implement trait `GroupByDsl<Expr>`:
             Alias<S>
             SelectStatement<F, S, D, W, O, LOf, G, H>

   
error[E0277]: the trait bound `BoxedSelectStatement<'_, (Integer, Text), FromClause<table>, _>: Table` is not satisfied
  --> tests/fail/boxed_queries_and_group_by.rs:91:10
   |
LL |         .group_by(users::id)
   |          ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `BoxedSelectStatement<'_, (Integer, Text), FromClause<table>, _>`
   |
   = help: the following other types implement trait `GroupByDsl<Expr>`:
             Alias<S>
             SelectStatement<F, S, D, W, O, LOf, G, H>

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>>: GroupByDsl<_>` is not satisfied
  --> tests/fail/boxed_queries_and_group_by.rs:91:10
   |
LL |         .group_by(users::id)
   |          ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `SelectStatement<FromClause<BoxedSelectStatement<'_, ..., ..., _>>>`
   |
   = help: the trait `GroupByDsl<Expr>` is implemented for `SelectStatement<F, S, D, W, O, LOf, G, H>`
