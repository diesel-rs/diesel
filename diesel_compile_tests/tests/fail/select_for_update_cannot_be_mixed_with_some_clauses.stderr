error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: DistinctDsl` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:14:24
   |
LL |     users.for_update().distinct();
   |                        ^^^^^^^^ the trait `DistinctDsl` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = note: a `DISTINCT` clause is not compatible with various other clauses like `LOCKING` clauses
   = help: the trait `DistinctDsl` is implemented for `SelectStatement<F, S, D, W, O, LOf, G, H>`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:14:24
   |
LL |     users.for_update().distinct();
   |                        ^^^^^^^^ the trait `DistinctDsl` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = help: the trait `DistinctDsl` is implemented for `SelectStatement<F, S, D, W, O, LOf, G, H>`

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>>: DistinctDsl` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:14:24
   |
LL |     users.for_update().distinct();
   |                        ^^^^^^^^ the trait `DistinctDsl` is not implemented for `SelectStatement<FromClause<...>>`
   |
   = note: a `DISTINCT` clause is not compatible with various other clauses like `LOCKING` clauses
   = help: the trait `DistinctDsl` is implemented for `SelectStatement<F, S, D, W, O, LOf, G, H>`

   
error[E0277]: the trait bound `SelectStatement<FromClause<table>, ..., ...>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:18:22
   |
LL |     users.distinct().for_update();
   |                      ^^^^^^^^^^ unsatisfied trait bound
   |
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<_, _, diesel::query_builder::distinct_clause::DistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, _, _, _>`
           but it is implemented for `SelectStatement<_, _, diesel::query_builder::distinct_clause::NoDistinctClause, _, _, _, _, _, _>`
   = help: for that trait implementation, expected `diesel::query_builder::distinct_clause::NoDistinctClause`, found `diesel::query_builder::distinct_clause::DistinctClause`

   
error[E0277]: the trait bound `SelectStatement<FromClause<table>, ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:18:22
   |
LL |     users.distinct().for_update();
   |                      ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<_, _, diesel::query_builder::distinct_clause::DistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, _, _, _>`
           but it is implemented for `SelectStatement<_, _, diesel::query_builder::distinct_clause::NoDistinctClause, _, _, _, _, _, _>`
   = help: for that trait implementation, expected `diesel::query_builder::distinct_clause::NoDistinctClause`, found `diesel::query_builder::distinct_clause::DistinctClause`

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:18:22
   |
LL |     users.distinct().for_update();
   |                      ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<FromClause<SelectStatement<..., ..., ...>>>`
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<Lock>` is implemented for `SelectStatement<F, S, diesel::query_builder::distinct_clause::NoDistinctClause, W, O, LOf>`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: DistinctOnDsl<_>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:22:24
   |
LL |     users.for_update().distinct_on(id);
   |                        ^^^^^^^^^^^ the trait `DistinctOnDsl<_>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = note: a `DISTINCT ON` clause is not compatible with various other clauses like `LOCKING` clauses
   = note: a `DISTINCT ON` clause also disallows mixing aggregate and non-aggregate expressions with the `SELECT` clause
   = help: the trait `DistinctOnDsl<_>` is not implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::LockingClause>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::NoLockingClause>`
   = help: for that trait implementation, expected `diesel::query_builder::locking_clause::NoLockingClause`, found `diesel::query_builder::locking_clause::LockingClause`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:22:24
   |
LL |     users.for_update().distinct_on(id);
   |                        ^^^^^^^^^^^ the trait `DistinctOnDsl<_>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = help: the trait `DistinctOnDsl<_>` is not implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::LockingClause>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::NoLockingClause>`
   = help: for that trait implementation, expected `diesel::query_builder::locking_clause::NoLockingClause`, found `diesel::query_builder::locking_clause::LockingClause`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: DistinctOnDsl<_>` is not satisfied
   --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:22:36
    |
22  |     users.for_update().distinct_on(id);
    |                                    ^^ the trait `DistinctOnDsl<_>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
    |
    = note: a `DISTINCT ON` clause is not compatible with various other clauses like `LOCKING` clauses
    = note: a `DISTINCT ON` clause also disallows mixing aggregate and non-aggregate expressions with the `SELECT` clause
    = help: the trait `DistinctOnDsl<_>` is not implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::LockingClause>`
            but it is implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::NoLockingClause>`
    = help: for that trait implementation, expected `diesel::query_builder::locking_clause::NoLockingClause`, found `diesel::query_builder::locking_clause::LockingClause`
note: required by a bound in `diesel::QueryDsl::distinct_on`
   --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
    |
LL |     fn distinct_on<Expr>(self, expr: Expr) -> DistinctOn<Self, Expr>
    |        ----------- required by a bound in this associated function
LL |     where
LL |         Self: methods::DistinctOnDsl<Expr>,
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::distinct_on`
 
    
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: DistinctOnDsl<...>` is not satisfied
   --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:22:36
    |
22  |     users.for_update().distinct_on(id);
    |                                    ^^ the trait `DistinctOnDsl<columns::id>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
    |
    = note: a `DISTINCT ON` clause is not compatible with various other clauses like `LOCKING` clauses
    = note: a `DISTINCT ON` clause also disallows mixing aggregate and non-aggregate expressions with the `SELECT` clause
    = help: the trait `DistinctOnDsl<columns::id>` is not implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::LockingClause>`
            but it is implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::NoLockingClause>`
    = help: for that trait implementation, expected `diesel::query_builder::locking_clause::NoLockingClause`, found `diesel::query_builder::locking_clause::LockingClause`
note: required by a bound in `diesel::QueryDsl::distinct_on`
   --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
    |
LL |     fn distinct_on<Expr>(self, expr: Expr) -> DistinctOn<Self, Expr>
    |        ----------- required by a bound in this associated function
LL |     where
LL |         Self: methods::DistinctOnDsl<Expr>,
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::distinct_on`
 
    
error[E0277]: the trait bound `SelectStatement<FromClause<table>, ..., ...>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:27:27
   |
LL |     users.distinct_on(id).for_update();
   |                           ^^^^^^^^^^ unsatisfied trait bound
   |
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<_, _, DistinctOnClause<columns::id>, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, _, _, _>`
           but it is implemented for `SelectStatement<_, _, diesel::query_builder::distinct_clause::NoDistinctClause, _, _, _, _, _, _>`
   = help: for that trait implementation, expected `diesel::query_builder::distinct_clause::NoDistinctClause`, found `DistinctOnClause<columns::id>`

   
error[E0277]: the trait bound `SelectStatement<FromClause<table>, ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:27:27
   |
LL |     users.distinct_on(id).for_update();
   |                           ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<_, _, DistinctOnClause<columns::id>, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, _, _, _>`
           but it is implemented for `SelectStatement<_, _, diesel::query_builder::distinct_clause::NoDistinctClause, _, _, _, _, _, _>`
   = help: for that trait implementation, expected `diesel::query_builder::distinct_clause::NoDistinctClause`, found `DistinctOnClause<columns::id>`

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:27:27
   |
LL |     users.distinct_on(id).for_update();
   |                           ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<FromClause<SelectStatement<..., ..., ...>>>`
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<Lock>` is implemented for `SelectStatement<F, S, diesel::query_builder::distinct_clause::NoDistinctClause, W, O, LOf>`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: GroupByDsl<_>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:31:24
   |
LL |     users.for_update().group_by(id);
   |                        ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = help: the trait `GroupByDsl<_>` is not implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::LockingClause>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::NoLockingClause>`
   = help: for that trait implementation, expected `diesel::query_builder::locking_clause::NoLockingClause`, found `diesel::query_builder::locking_clause::LockingClause`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:31:24
   |
LL |     users.for_update().group_by(id);
   |                        ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = help: the trait `GroupByDsl<_>` is not implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::LockingClause>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::NoLockingClause>`
   = help: for that trait implementation, expected `diesel::query_builder::locking_clause::NoLockingClause`, found `diesel::query_builder::locking_clause::LockingClause`

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>>: GroupByDsl<_>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:31:24
   |
LL |     users.for_update().group_by(id);
   |                        ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `SelectStatement<FromClause<...>>`
   |
   = help: the trait `GroupByDsl<Expr>` is implemented for `SelectStatement<F, S, D, W, O, LOf, G, H>`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ...>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:35:24
   |
LL |     users.group_by(id).for_update();
   |                        ^^^^^^^^^^ unsatisfied trait bound
   |
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<_, _, _, _, _, _, diesel::query_builder::group_by_clause::GroupByClause<columns::id>, _, _>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, diesel::query_builder::group_by_clause::NoGroupByClause, _, _>`
   = help: for that trait implementation, expected `diesel::query_builder::group_by_clause::NoGroupByClause`, found `diesel::query_builder::group_by_clause::GroupByClause<columns::id>`

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>, ..., ..., ..., ..., ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:35:24
   |
LL |     users.group_by(id).for_update();
   |                        ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<_, _, _, _, _, _, diesel::query_builder::group_by_clause::GroupByClause<columns::id>, _, _>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, diesel::query_builder::group_by_clause::NoGroupByClause, _, _>`
   = help: for that trait implementation, expected `diesel::query_builder::group_by_clause::NoGroupByClause`, found `diesel::query_builder::group_by_clause::GroupByClause<columns::id>`

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:35:24
   |
LL |     users.group_by(id).for_update();
   |                        ^^^^^^^^^^ the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<FromClause<...>>`
   |
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<Lock>` is implemented for `SelectStatement<F, S, diesel::query_builder::distinct_clause::NoDistinctClause, W, O, LOf>`

   
error[E0277]: the trait bound `BoxedSelectStatement<'_, (Integer,), ..., _>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:39:24
   |
LL |     users.into_boxed().for_update();
   |                        ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `BoxedSelectStatement<'_, (diesel::sql_types::Integer,), FromClause<users::table>, _>`
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the following other types implement trait `LockingDsl<Lock>`:
             Alias<S>
             SelectStatement<F, S, diesel::query_builder::distinct_clause::NoDistinctClause, W, O, LOf>

   
error[E0277]: the trait bound `BoxedSelectStatement<'_, (diesel::sql_types::Integer,), FromClause<users::table>, _>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:39:24
   |
LL |     users.into_boxed().for_update();
   |                        ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `BoxedSelectStatement<'_, (diesel::sql_types::Integer,), FromClause<users::table>, _>`
   = help: the following other types implement trait `LockingDsl<Lock>`:
             Alias<S>
             SelectStatement<F, S, diesel::query_builder::distinct_clause::NoDistinctClause, W, O, LOf>

error[E0277]: the trait bound `SelectStatement<FromClause<...>>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:39:24
   |
LL |     users.into_boxed().for_update();
   |                        ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<FromClause<BoxedSelectStatement<'_, (...,), ..., _>>>`
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<Lock>` is implemented for `SelectStatement<F, S, diesel::query_builder::distinct_clause::NoDistinctClause, W, O, LOf>`

   
error[E0277]: cannot box `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>` for backend `_`
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:43:24
   |
LL |     users.for_update().into_boxed();
   |                        ^^^^^^^^^^ the trait `BoxedDsl<'_, _>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = note: this either means `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>` is no valid SQL for `_`
   = note: or this means `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>` uses clauses not supporting boxing like the `LOCKING` or `GROUP BY` clause
   = help: the following other types implement trait `BoxedDsl<'a, DB>`:
             SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H>
             SelectStatement<NoFromClause, S, D, W, O, LOf, G, H>

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:43:24
   |
LL |     users.for_update().into_boxed();
   |                        ^^^^^^^^^^ the trait `BoxedDsl<'_, _>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = help: the following other types implement trait `BoxedDsl<'a, DB>`:
             SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H>
             SelectStatement<NoFromClause, S, D, W, O, LOf, G, H>

   
error[E0277]: cannot box `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>` for backend `_`
    --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:43:5
     |
43   |     users.for_update().into_boxed();
     |     ^^^^^^^^^^^^^^^^^^ the trait `BoxedDsl<'_, _>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
     |
     = note: this either means `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>` is no valid SQL for `_`
     = note: or this means `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>` uses clauses not supporting boxing like the `LOCKING` or `GROUP BY` clause
     = help: the following other types implement trait `BoxedDsl<'a, DB>`:
               SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H>
               SelectStatement<NoFromClause, S, D, W, O, LOf, G, H>
note: required by a bound in `diesel::QueryDsl::into_boxed`
    --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
     |
LL |     fn into_boxed<'a, DB>(self) -> IntoBoxed<'a, Self, DB>
     |        ---------- required by a bound in this associated function
...
LL |         Self: methods::BoxedDsl<'a, DB>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::into_boxed`
  
     
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: GroupByDsl<_>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:47:24
   |
LL |     users.for_update().group_by(id).having(id.gt(1));
   |                        ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = help: the trait `GroupByDsl<_>` is not implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::LockingClause>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::NoLockingClause>`
   = help: for that trait implementation, expected `diesel::query_builder::locking_clause::NoLockingClause`, found `diesel::query_builder::locking_clause::LockingClause`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:47:24
   |
LL |     users.for_update().group_by(id).having(id.gt(1));
   |                        ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `SelectStatement<..., ..., ..., ..., ..., ..., ..., ..., ...>`
   |
   = help: the trait `GroupByDsl<_>` is not implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::LockingClause>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, _, _, diesel::query_builder::locking_clause::NoLockingClause>`
   = help: for that trait implementation, expected `diesel::query_builder::locking_clause::NoLockingClause`, found `diesel::query_builder::locking_clause::LockingClause`

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>>: GroupByDsl<_>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:47:24
   |
LL |     users.for_update().group_by(id).having(id.gt(1));
   |                        ^^^^^^^^ the trait `GroupByDsl<_>` is not implemented for `SelectStatement<FromClause<...>>`
   |
   = help: the trait `GroupByDsl<Expr>` is implemented for `SelectStatement<F, S, D, W, O, LOf, G, H>`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ...>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:51:41
   |
LL |     users.group_by(id).having(id.gt(1)).for_update();
   |                                         ^^^^^^^^^^ unsatisfied trait bound
   |
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<_, _, _, _, _, _, diesel::query_builder::group_by_clause::GroupByClause<columns::id>, diesel::query_builder::having_clause::HavingClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Gt<columns::id, diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>>>>, _>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, diesel::query_builder::group_by_clause::NoGroupByClause, diesel::query_builder::having_clause::NoHavingClause, _>`
   = help: for that trait implementation, expected `diesel::query_builder::group_by_clause::NoGroupByClause`, found `diesel::query_builder::group_by_clause::GroupByClause<columns::id>`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ..., ...>: Table` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:51:41
   |
LL |     users.group_by(id).having(id.gt(1)).for_update();
   |                                         ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<_, _, _, _, _, _, diesel::query_builder::group_by_clause::GroupByClause<columns::id>, diesel::query_builder::having_clause::HavingClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Gt<columns::id, diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>>>>, _>`
           but it is implemented for `SelectStatement<_, _, _, _, _, _, diesel::query_builder::group_by_clause::NoGroupByClause, diesel::query_builder::having_clause::NoHavingClause, _>`
   = help: for that trait implementation, expected `diesel::query_builder::group_by_clause::NoGroupByClause`, found `diesel::query_builder::group_by_clause::GroupByClause<columns::id>`

   
error[E0277]: the trait bound `SelectStatement<FromClause<...>>: LockingDsl<...>` is not satisfied
  --> tests/fail/select_for_update_cannot_be_mixed_with_some_clauses.rs:51:41
   |
LL |     users.group_by(id).having(id.gt(1)).for_update();
   |                                         ^^^^^^^^^^ the trait `LockingDsl<diesel::query_builder::locking_clause::ForUpdate>` is not implemented for `SelectStatement<FromClause<...>>`
   |
   = note: a `LOCKING` clause is incompatible with various other clauses like a `DISTINCT` clause
   = help: the trait `LockingDsl<Lock>` is implemented for `SelectStatement<F, S, diesel::query_builder::distinct_clause::NoDistinctClause, W, O, LOf>`

   For more information about this error, try `rustc --explain E0277`.
