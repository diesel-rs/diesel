error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ...>: DistinctOnDsl<_>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:26:10
   |
LL |         .distinct_on(posts::id)
   |          ^^^^^^^^^^^ the trait `DistinctOnDsl<_>` is not implemented for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>`
   |
   = note: a `DISTINCT ON` clause is not compatible with various other clauses like `LOCKING` clauses
   = note: a `DISTINCT ON` clause also disallows mixing aggregate and non-aggregate expressions with the `SELECT` clause
   = help: the trait `DistinctOnDsl<Selection>` is implemented for `SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H>`

   
error[E0277]: the trait bound `SelectStatement<..., ..., ..., ..., ..., ..., ...>: SelectDsl<_>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:34:10
   |
LL |         .select(posts::user_id)
   |          ^^^^^^ the trait `SelectDsl<_>` is not implemented for `SelectStatement<FromClause<table>, ..., ..., ..., ..., ..., ...>`
   |
   = help: the following other types implement trait `SelectDsl<Selection>`:
             SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H, LC>
             SelectStatement<NoFromClause, S, D, W, O, LOf, G, H, LC>

   
error[E0277]: mixing aggregate and not aggregate expressions is not allowed in SQL
   --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:40:17
    |
40  |         .select(dsl::count(posts::id))
    |          ------ ^^^^^^^^^^^^^^^^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
    |          |
    |          required by a bound introduced by this call
    |
    = note: you tried to combine expressions that aggregate over a certain column with expressions that don't aggregate over that column
    = note: try to either use aggregate functions like `min`/`max`/… for this column or add the column to your `GROUP BY` clause
    = note: also there are clauses like `WHERE` or `RETURNING` that does not accept aggregate expressions at all
    = help: the following other types implement trait `MixedAggregates<Other>`:
              `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::Never>`
              `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::No>`
    = note: required for `(user_id, count<Integer, id>)` to implement `ValidGrouping<()>`
    = note: required for `DistinctOnClause<columns::user_id>` to implement `query_dsl::group_by_dsl::ValidDistinctForGroupBy<diesel::expression::count::count_utils::count<diesel::sql_types::Integer, columns::id>, ()>`
    = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<...>, ...>` to implement `SelectDsl<diesel::expression::count::count_utils::count<diesel::sql_types::Integer, columns::id>>`
note: required by a bound in `diesel::QueryDsl::select`
   --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
    |
LL |     fn select<Selection>(self, selection: Selection) -> Select<Self, Selection>
    |        ------ required by a bound in this associated function
...
LL |         Self: methods::SelectDsl<Selection>,
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::select`
 
    
error[E0277]: mixing aggregate and not aggregate expressions is not allowed in SQL
   --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:46:22
    |
46  |         .distinct_on(posts::user_id)
    |          ----------- ^^^^^^^^^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
    |          |
    |          required by a bound introduced by this call
    |
    = note: you tried to combine expressions that aggregate over a certain column with expressions that don't aggregate over that column
    = note: try to either use aggregate functions like `min`/`max`/… for this column or add the column to your `GROUP BY` clause
    = note: also there are clauses like `WHERE` or `RETURNING` that does not accept aggregate expressions at all
    = help: the following other types implement trait `MixedAggregates<Other>`:
              `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::Never>`
              `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::No>`
    = note: required for `(user_id, count<Integer, id>)` to implement `ValidGrouping<()>`
    = note: required for `SelectStatement<FromClause<table>, SelectClause<count<Integer, id>>>` to implement `DistinctOnDsl<columns::user_id>`
note: required by a bound in `diesel::QueryDsl::distinct_on`
   --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
    |
LL |     fn distinct_on<Expr>(self, expr: Expr) -> DistinctOn<Self, Expr>
    |        ----------- required by a bound in this associated function
LL |     where
LL |         Self: methods::DistinctOnDsl<Expr>,
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::distinct_on`
 
    
error[E0277]: the trait bound `SelectStatement<FromClause<table>, ..., ...>: SelectDsl<...>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:52:10
   |
LL |         .count()
   |          ^^^^^ the trait `SelectDsl<CountStar>` is not implemented for `SelectStatement<FromClause<table>, DefaultSelectClause<...>, ...>`
   |
   = help: the following other types implement trait `SelectDsl<Selection>`:
             SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H, LC>
             SelectStatement<NoFromClause, S, D, W, O, LOf, G, H, LC>

   
error[E0277]: mixing aggregate and not aggregate expressions is not allowed in SQL
   --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:58:22
    |
58  |         .distinct_on(posts::user_id)
    |          ----------- ^^^^^^^^^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
    |          |
    |          required by a bound introduced by this call
    |
    = note: you tried to combine expressions that aggregate over a certain column with expressions that don't aggregate over that column
    = note: try to either use aggregate functions like `min`/`max`/… for this column or add the column to your `GROUP BY` clause
    = note: also there are clauses like `WHERE` or `RETURNING` that does not accept aggregate expressions at all
    = help: the following other types implement trait `MixedAggregates<Other>`:
              `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::Never>`
              `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::No>`
    = note: required for `(columns::user_id, CountStar)` to implement `ValidGrouping<()>`
    = note: required for `SelectStatement<FromClause<table>, SelectClause<CountStar>>` to implement `DistinctOnDsl<columns::user_id>`
note: required by a bound in `diesel::QueryDsl::distinct_on`
   --> DIESEL/diesel/diesel/src/query_dsl/mod.rs
    |
LL |     fn distinct_on<Expr>(self, expr: Expr) -> DistinctOn<Self, Expr>
    |        ----------- required by a bound in this associated function
LL |     where
LL |         Self: methods::DistinctOnDsl<Expr>,
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::distinct_on`
 
    For more information about this error, try `rustc --explain E0277`.
