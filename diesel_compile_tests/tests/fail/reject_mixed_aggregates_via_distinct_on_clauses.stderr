error[E0277]: the trait bound `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<posts::table>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<columns::user_id>>: DistinctOnDsl<_>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:26:10
   |
26 |         .distinct_on(posts::id) // error
   |          ^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `DistinctOnDsl<_>` is not implemented for `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<posts::table>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<columns::user_id>>`
   = help: the trait `DistinctOnDsl<Selection>` is implemented for `SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H>`

error[E0277]: the trait bound `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<posts::table>>, DistinctOnClause<columns::id>, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<columns::user_id>>: SelectDsl<_>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:33:10
   |
33 |         .select(posts::user_id) // error
   |          ^^^^^^ unsatisfied trait bound
   |
   = help: the trait `SelectDsl<_>` is not implemented for `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<posts::table>>, DistinctOnClause<columns::id>, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<columns::user_id>>`
   = help: the following other types implement trait `SelectDsl<Selection>`:
             SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H, LC>
             SelectStatement<NoFromClause, S, D, W, O, LOf, G, H, LC>

error[E0277]: the trait bound `diesel::expression::is_aggregate::No: MixedAggregates<diesel::expression::is_aggregate::Yes>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:38:17
   |
38 |         .select(dsl::count(posts::id)) // error
   |          ------ ^^^^^^^^^^^^^^^^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `MixedAggregates<Other>`:
             `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::Never>`
             `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::No>`
   = note: required for `(columns::user_id, diesel::expression::count::count_utils::count<diesel::sql_types::Integer, columns::id>)` to implement `ValidGrouping<()>`
   = note: required for `DistinctOnClause<columns::user_id>` to implement `query_dsl::group_by_dsl::ValidDistinctForGroupBy<diesel::expression::count::count_utils::count<diesel::sql_types::Integer, columns::id>, ()>`
   = note: required for `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<posts::table>>, DistinctOnClause<columns::user_id>>` to implement `SelectDsl<diesel::expression::count::count_utils::count<diesel::sql_types::Integer, columns::id>>`
note: required by a bound in `diesel::QueryDsl::select`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn select<Selection>(self, selection: Selection) -> Select<Self, Selection>
   |        ------ required by a bound in this associated function
...
   |         Self: methods::SelectDsl<Selection>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::select`

error[E0277]: the trait bound `diesel::expression::is_aggregate::No: MixedAggregates<diesel::expression::is_aggregate::Yes>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:43:22
   |
43 |         .distinct_on(posts::user_id) // error
   |          ----------- ^^^^^^^^^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `MixedAggregates<Other>`:
             `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::Never>`
             `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::No>`
   = note: required for `(columns::user_id, diesel::expression::count::count_utils::count<diesel::sql_types::Integer, columns::id>)` to implement `ValidGrouping<()>`
   = note: required for `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::SelectClause<diesel::expression::count::count_utils::count<diesel::sql_types::Integer, columns::id>>>` to implement `DistinctOnDsl<columns::user_id>`
note: required by a bound in `diesel::QueryDsl::distinct_on`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn distinct_on<Expr>(self, expr: Expr) -> DistinctOn<Self, Expr>
   |        ----------- required by a bound in this associated function
   |     where
   |         Self: methods::DistinctOnDsl<Expr>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::distinct_on`

error[E0277]: the trait bound `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<posts::table>>, DistinctOnClause<columns::user_id>>: SelectDsl<CountStar>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:48:10
   |
48 |         .count() // error
   |          ^^^^^ unsatisfied trait bound
   |
   = help: the trait `SelectDsl<CountStar>` is not implemented for `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<posts::table>>, DistinctOnClause<columns::user_id>>`
   = help: the following other types implement trait `SelectDsl<Selection>`:
             SelectStatement<FromClause<F>, S, D, W, O, LOf, G, H, LC>
             SelectStatement<NoFromClause, S, D, W, O, LOf, G, H, LC>

error[E0277]: the trait bound `diesel::expression::is_aggregate::No: MixedAggregates<diesel::expression::is_aggregate::Yes>` is not satisfied
  --> tests/fail/reject_mixed_aggregates_via_distinct_on_clauses.rs:53:22
   |
53 |         .distinct_on(posts::user_id) // error
   |          ----------- ^^^^^^^^^^^^^^ the trait `MixedAggregates<diesel::expression::is_aggregate::Yes>` is not implemented for `diesel::expression::is_aggregate::No`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `MixedAggregates<Other>`:
             `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::Never>`
             `diesel::expression::is_aggregate::No` implements `MixedAggregates<diesel::expression::is_aggregate::No>`
   = note: required for `(columns::user_id, CountStar)` to implement `ValidGrouping<()>`
   = note: required for `SelectStatement<FromClause<posts::table>, diesel::query_builder::select_clause::SelectClause<CountStar>>` to implement `DistinctOnDsl<columns::user_id>`
note: required by a bound in `diesel::QueryDsl::distinct_on`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn distinct_on<Expr>(self, expr: Expr) -> DistinctOn<Self, Expr>
   |        ----------- required by a bound in this associated function
   |     where
   |         Self: methods::DistinctOnDsl<Expr>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::distinct_on`
