error[E0271]: type mismatch resolving `<Grouped<Eq<title, Bound<Text, &str>>> as AsChangeset>::Target == table`
  --> tests/fail/update_requires_column_be_from_same_table.rs:24:37
   |
LL |     let command = update(users).set(posts::title.eq("Hello"));
   |                                 --- ^^^^^^^^^^^^^^^^^^^^^^^^ expected `users::table`, found `posts::table`
   |                                 |
   |                                 required by a bound introduced by this call
   |
   = note: `posts::table` and `users::table` have similar names, but are actually distinct types
note: `posts::table` is defined in module `crate::posts` of the current crate
  --> tests/fail/update_requires_column_be_from_same_table.rs:12:1
   |
LL | / table! {
LL | |     posts {
LL | |         id -> Integer,
LL | |         title -> VarChar,
LL | |     }
LL | | }
   | |_^
note: `users::table` is defined in module `crate::users` of the current crate
  --> tests/fail/update_requires_column_be_from_same_table.rs:5:1
   |
5  | / table! {
6  | |     users {
7  | |         id -> Integer,
8  | |         name -> VarChar,
9  | |     }
LL | | }
   | |_^
note: the method call chain might not have had the expected associated types
  --> tests/fail/update_requires_column_be_from_same_table.rs:24:50
   |
LL |     let command = update(users).set(posts::title.eq("Hello"));
   |                                     ------------ ^^^^^^^^^^^ `AsChangeset::Target` is `table` here
   |                                     |
   |                                     this expression has type `title`
note: required by a bound in `UpdateStatement::<T, U>::set`
  --> DIESEL/diesel/diesel/src/query_builder/update_statement/mod.rs
   |
LL |     pub fn set<V>(self, values: V) -> UpdateStatement<T, U, V::Changeset>
   |            --- required by a bound in this associated function
...
LL |         V: changeset::AsChangeset<Target = T>,
   |                                   ^^^^^^^^^^ required by this bound in `UpdateStatement::<T, U>::set`
   = note: this error originates in the macro `table` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/update_requires_column_be_from_same_table.rs:26:33
   |
LL |     let command = update(users).set(name.eq(posts::title));
   |                                 ^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `AppearsOnTable<users::table>`
  --> tests/fail/update_requires_column_be_from_same_table.rs:15:9
   |
LL |         title -> VarChar,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `diesel::expression::operators::Eq<users::columns::name, posts::columns::title>` to implement `AsChangeset`
For more information about this error, try `rustc --explain E0271`.
