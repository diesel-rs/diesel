error[E0277]: cannot select `non_users::columns::noname` from `users::table`
   --> tests/fail/returning_clause_requires_selectable_expression.rs:27:20
    |
27  |         .returning(non_users::columns::noname);
    |          --------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `non_users::columns::noname`
    |          |
    |          required by a bound introduced by this call
    |
    = note: `non_users::columns::noname` is no valid selection for `users::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              `non_users::columns::noname` implements `SelectableExpression<JoinOn<Join, On>>`
              `non_users::columns::noname` implements `SelectableExpression<Only<non_users::table>>`
              `non_users::columns::noname` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
              `non_users::columns::noname` implements `SelectableExpression<Tablesample<non_users::table, TSM>>`
              `non_users::columns::noname` implements `SelectableExpression<non_users::table>`
              `non_users::columns::noname` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
              `non_users::columns::noname` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
note: required by a bound in `DeleteStatement::<T, U>::returning`
   --> DIESEL/diesel/diesel/src/query_builder/delete_statement/mod.rs
    |
LL |     pub fn returning<E>(self, returns: E) -> DeleteStatement<T, U, ReturningClause<E>>
    |            --------- required by a bound in this associated function
LL |     where
LL |         E: SelectableExpression<T>,
    |            ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `DeleteStatement::<T, U>::returning`

error[E0277]: cannot select `non_users::columns::noname` from `users::table`
   --> tests/fail/returning_clause_requires_selectable_expression.rs:32:20
    |
32  |         .returning(non_users::columns::noname);
    |          --------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `non_users::columns::noname`
    |          |
    |          required by a bound introduced by this call
    |
    = note: `non_users::columns::noname` is no valid selection for `users::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              `non_users::columns::noname` implements `SelectableExpression<JoinOn<Join, On>>`
              `non_users::columns::noname` implements `SelectableExpression<Only<non_users::table>>`
              `non_users::columns::noname` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
              `non_users::columns::noname` implements `SelectableExpression<Tablesample<non_users::table, TSM>>`
              `non_users::columns::noname` implements `SelectableExpression<non_users::table>`
              `non_users::columns::noname` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
              `non_users::columns::noname` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
    = note: required for `InsertStatement<table, ValuesClause<(...,), ...>, ..., ...>` to implement `Query`
note: required by a bound in `InsertStatement::<T, U, Op>::returning`
   --> DIESEL/diesel/diesel/src/query_builder/insert_statement/mod.rs
    |
LL |     pub fn returning<E>(self, returns: E) -> InsertStatement<T, U, Op, ReturningClause<E>>
    |            --------- required by a bound in this associated function
LL |     where
LL |         InsertStatement<T, U, Op, ReturningClause<E>>: Query,
    |                                                        ^^^^^ required by this bound in `InsertStatement::<T, U, Op>::returning`
 
    
error[E0277]: cannot select `non_users::columns::noname` from `users::table`
   --> tests/fail/returning_clause_requires_selectable_expression.rs:37:20
    |
37  |         .returning(non_users::columns::noname);
    |          --------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `non_users::columns::noname`
    |          |
    |          required by a bound introduced by this call
    |
    = note: `non_users::columns::noname` is no valid selection for `users::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              `non_users::columns::noname` implements `SelectableExpression<JoinOn<Join, On>>`
              `non_users::columns::noname` implements `SelectableExpression<Only<non_users::table>>`
              `non_users::columns::noname` implements `SelectableExpression<SelectStatement<FromClause<From>>>`
              `non_users::columns::noname` implements `SelectableExpression<Tablesample<non_users::table, TSM>>`
              `non_users::columns::noname` implements `SelectableExpression<non_users::table>`
              `non_users::columns::noname` implements `SelectableExpression<query_source::joins::Join<Left, Right, Inner>>`
              `non_users::columns::noname` implements `SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>`
    = note: required for `UpdateStatement<table, NoWhereClause, Assign<..., ...>, ...>` to implement `Query`
note: required by a bound in `UpdateStatement::<T, U, V>::returning`
   --> DIESEL/diesel/diesel/src/query_builder/update_statement/mod.rs
    |
LL |     pub fn returning<E>(self, returns: E) -> UpdateStatement<T, U, V, ReturningClause<E>>
    |            --------- required by a bound in this associated function
...
LL |         UpdateStatement<T, U, V, ReturningClause<E>>: Query,
    |                                                       ^^^^^ required by this bound in `UpdateStatement::<T, U, V>::returning`
 
    For more information about this error, try `rustc --explain E0277`.
